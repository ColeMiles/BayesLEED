C  V. Blum, 04/2000: Original Van Hove R-factor program, used in this
C                    form since 1982, modifications made in Erlangen.
C                    Code works but handling is more difficult than
C                    for the rest of the package. In particular,
C                    array dimensions are set explicitly and the program
C                    will handle too small dimensions ungracefully, sometimes
C                    by simply printing out wrong numbers. Sorry!!
C
CRFAC90
C
C  VAN HOVE R-FACTOR PROGRAM  /  MODIFIED BY G. BESOLD (JAN. '82)
C                                ERGAENZUNG     (JAN.  '87)              260187
C  MODIFIED BY RD: AVERAGE-R-FACTORS EXCHANGED                          141290
C  ATTENTION WITH CUT-OFF-PARAMETER IN YPEND (NOW 1E-07)
C
C     PROGRAM RFAC(INPUT,OUTPUT,OUT,OUTB,OUTR,OUTG,TAPE5=INPUT,
C    1TAPE6=OUTPUT,TAPE8=OUT,TAPE9=OUTB,TAPE10=OUTR,TAPE11=OUTG)
C  R-FACTOR PROGRAM FOR COMPARING LEED EXPERIMENT AND THEORY.            040481
C  TEN DIFFERENT R-FACTORS (THOSE USED BY VAN HOVE-TONG-ELCONIN AND TWO
C  RELATED ONES, THE ZANAZZI-JONA R-FACTOR AND A MODIFIED VERSION OF IT,
C  AND THE PENDRY R-FACTOR),TOGETHER WITH THEIR AVERAGE ARE PRODUCED.
C  FOR MORE DETAILS, SEE BETWEEN LABELS 209 AND 115.
C  TWO SETS OF R-FACTORS (AVERAGES OVER DIFFERENT R-FACTORS AND
C  AVERAGES OVER BEAMS) ARE PRINTER-PLOTTED ON OUTPUT UNITS 9,10 AND 11. 271279
C  THE STANDARD ERROR IN THE MEAN OF THE BEAM R-FACTORS AND OF THEIR     090680
C  DERIVATIVES WITH RESPECT TO A STRUCTURAL PARAMETER ARE PRODUCED, AS   090680
C  ADDITIONAL MEASURES OF THE RELIABILITY OF EACH GEOMETRY.              090680
C  EXPERIMENTAL IV-CURVES FROM DIFFERENT EXPERIMENTS CAN BE AVERAGED
C  TOGETHER (THE SAME ENERGY VALUES, BUT NOT ENERGY LIMITS ARE REQUIRED).100281
C  NO ENERGY GAPS ARE ALLOWED IN AN I-V CURVE, BUT THE INPUT ENERGIES    100281
C  MAY BE IN ANY ORDER.                                                  100281
C  REQUIRED). THE EXPERIMENT CAN BE SMOOTHED BEFORE INTERPOLATION ONTO A
C  REGULAR ENERGY GRID. INDIVIDUAL EXP. BEAMS CAN BE SKIPPED (SEE NBEA).
C  THE THEORETICAL IV-CURVES (READ IN WITH THE FORMAT USED IN THE
C  VAN HOVE-TONG LEED PROGRAMS) FOR RELATED BEAMS CAN BE AVERAGED
C  TOGETHER TO ACCOUNT FOR DIFFERENT DOMAINS. INDIVIDUAL THEOR. BEAMS
C  CAN BE SKIPPED (SEE IBP). INDIVIDUAL THEOR. GEOMETRIES CAN ALSO BE
C  SKIPPED (SEE NSSK).
C  THE EXP. IV-CURVES, THEIR 1ST AND 2ND DERIVATIVES AND THEIR
C  PENDRY Y FUNCTION CAN BE PRINTER-PLOTTED. THE BEST THEOR. IV-CURVES
C  CAN ALSO BE PRINTER-PLOTTED (BEST IS DEFINED BY THE INPUT NUMBER
C  DRFAC). BLOW-UP OF WEAK HIGHER-ENERGY INTENSITIES MAY BE USED IN
C  THE PLOTS.
C
C  NOTE - THIS PROGRAM CAN ALSO BE USED TO PRINTER-PLOT EITHER EXP. OR
C         THEOR. IV-CURVES, SKIPPING THE CALCULATION OF R-FACTORS. TO
C         THAT END, EITHER NBTD=0 OR NBED=0 SHOULD BE SET IN THE INPUT,
C         RESP.  IBP IS USED TO SELECT THE ORDER OF PLOTTING OF THEOR.
C         BEAMS (IBP=0 INDICATING THE SKIPPING OF A BEAM). NSSK IS USED
C         TO SKIP THEOR. GEOMETRIES. NBEA HAS THE SAME FUNCTION FOR THE
C         EXP. CURVES AS IBP HAS FOR THEOR. CURVES.
C
C
C  INPUT FORMAT (SEE DESCRIPTION OF INDIVIDUAL QUANTITIES FURTHER DOWN)
C
C  - $NL1 NS=..,V01=..,...  , $END  (SOME COMPILERS EXPECT A SYMBOL
C                                    DIFFERENT FROM $)
C  - NBTD,NBED  (2I3)
C  - KAV (5(25I3,/))
C  - $NL2 IBP=..,..,.....  ,
C     NSSK=..,..,.....  , $END
C  - TEXT DESCRIBING EXPERIMENT (19A4)
C  - NBEA (5(25I3,/))
C  - FORMAT FOR EXP. ENERGIES AND INTENSITIES (19A4)
C  - BENAME(IB) (5A4)
C  - NEE(IB),FAC (1I3,1E13.4)
C  - EE(IB,IE),AE(IB,IE) (FORMAT READ ABOVE)
C  - REPEAT LAST STEP UNTIL NEE(IB) PAIRS OF VALUES HAVE BEEN READ IN
C  - GO BACK TO READ BENAME(IB+1) UNTIL NBED BEAMS HAVE BEEN READ IN
C  - TEXT DESCRIBING THEORY (19A4)
C  - NBTD (1I3)  (SAME AS ABOVE, REPEATED)
C  - LAB(IB),PQ(IB),SYM(IB) (1I3,2F6.3,1I3) (LAB NOT USED)
C  - REPEAT LAST STEP UNTIL NBTD BEAMS HAVE BEEN READ IN
C  - EINLESEN VON ENERGIE, GEOMETRIE UND THEORET. INTENSITAETEN FUER
C                 ALLE BEAMS (FORMAT WIE VAN HOVE-OUTPUT);
C                 (NEOF = END-OF-FILE-FLAG, SIEHE SUBROUTINE 'RDPL')
C  - REPEAT LAST STEP  UNTIL NS GEOMETRIES HAVE BEEN READ IN
C  - REPEAT LAST TWO STEPS UNTIL AN END-OF-FILE IS ENCOUNTERED
C  - IF END-OF-FILE IS ENCOUNTERED, GO BACK TO READ IN TEXT DESCRIBING
C    NEXT SET OF THEOR. DATA (CONTAINING FURTHER ENERGIES) UNTIL
C    LIMFIL SETS OF THEOR. DATA HAVE BEEN READ IN
C         (THE THEOR. DATA FROM TEXT TO END-OF-FILE ARE READ IN WITH
C          THE FORMAT APPROPRIATE TO READ OUTPUT FROM THE VAN HOVE/TONG
C          LEED PROGRAMS.)
C
C  DIMENSIONS  243 .GE. NSS = NO. OF GEOMETRIES (AFTER SUBTRACTION OF
C                           SKIPPED GEOMETRIES)
C              243 .GE. NS  = NO. OF GEOMETRIES (BEFORE SUBTRACTION OF
C                           SKIPPED GEOMETRIES)
C              243 .GE. NSPL = N0. OF LOGICALLY CONSECUTIVE GEOMETRIES
C              243 .GE. NBED = NO. OF EXPERIMENTAL BEAMS READ IN
C              26 .GE. NBTD = NO. OF THEORETICAL BEAMS READ IN
C             200 .GE. NET (I.E. NO. OF ENERGIES IN A THEOR. BEAM, AT
C                           TIME OF READING IN)
C            1200 .GE. NEE OR NET FOR ANY BEAM, BOTH BEFORE AND AFTER
C                          INTERPOLATION
C              23 .GE. NV0 = NO. OF VALUES INNER POT. WILL TAKE
C
C  OTHER LIMITATIONS - WITH IPR=1, NO EXP. ENERGY MAY EXCEED 221. EV,
C                      THE UPPER LIMIT FOR THE PRINTER-PLOTS.
C                    - ENERGIES TO BE INPUT IN EV, INTENSITIES IN ANY
C                      UNIT (MAY BE BEAM-DEPENDENT). CF. ALSO
C                      PURPOSE OF INPUT QUANTITY FAC IN ROUTINE READE.
C
      PROGRAM RFAC243

C  MNG is max. number of geometries in theoretical I(E) output file.

      PARAMETER(MNG=1331)

      DIMENSION AE(MNG,1200),EE(MNG,1200),NEE(MNG),NBEA(MNG),
     1BENAME(5,MNG),AEP(MNG,1200),AEPP(MNG,1200),YE(MNG,1200),
     +TSE(MNG),
     2TSE2(MNG),TSEP(MNG),TSEP2(MNG),TSEPP(MNG),TSEPP2(MNG),
     3TSEY2(MNG),XPL(1200),YPL(1,1200)
      DIMENSION EET(26),ROS(26),R1(26),R2(26),RP1(26),RP2(26),
     1RPP1(26),RPP2(26),RRZJ(26),RMZJ(26),RPE(26),RAV(26),WB(26),WR(10)
      DIMENSION ES(1200),AT(26,1200),ATP(26,1200),ATPP(26,1200),AR(11)
      DIMENSION PQ(2,26),VAL(MNG),VALUES(MNG),KAV(26),ET(26,1200),
     1YT(26,1200),TST(26),TSTY2(26),TEXT(19),ATS(MNG,26,200),
     2RST1(1,1,1)
C               DIMENSION EETS( 1, 1, 1),RD( 1, 1),RST2( 1, 1, 1)
      INTEGER SYM(26),IBP(26),NSSK(MNG),NET(26),NST1(26),NST2(26),
     1NNN(1200),IBM(26)
C  ZUSATZ-DEKLARATIONEN                                                  260187
      REAL ARM(2),ARPEM(2),ERANGM(2),OVLM(2),RAZZM(2),RANNM(2),RAVPM(2)  260187
      REAL XRPEM(2)                                                      260187
      INTEGER MITTEL(26),SBR                                             260187
C  FOR CDC ONLY  ***************************
C     LEVEL 2, ATS,EET,EETS,RAV,AR,RST1,RST2
      COMMON /BIG/ ATS,EET,EETS,RAV,AR,RST1,RST2
C     LEVEL 2, AT,ATP,ATPP,YT,ET,AE,AEP,AEPP,YE,EE
      COMMON /BIG1/ AT,ATP,ATPP,YT,ET,AE,AEP,AEPP,YE,EE
      NAMELIST /NL1/ EMIN,EMAX,EINCR,      NS,NSPL,      NBLOW,BLOWX
     1,LIMFIL,IPR,VI,V0RR,V01,V02,VINCR,DRFAC,IREN,ISMOTH,SBR
      NAMELIST /NL2/ IBP,NSSK,WB,WR
C
C  VARIABLES IN NAMELISTS -
C
C  EMIN,EMAX ARE ENERGIES AT LEFT AND RIGHT EDGES OF DESIRED THEOR.
C   ENERGY RANGE (INTENSITIES OUTSIDE THIS RANGE WILL BE IGNORED).
C   DEFAULTS ARE EMIN=0., EMAX=220. EV.
C  EINCR (IN EV) IS GRID STEP FOR ENERGY. A VALUE OF 1. EV IS
C   RECOMMENDED (ALL WORK IS DONE ON THIS GRID, EXCEPT FOR THE
C   INTEGRATION OF THE ZANAZZI-JONA INTEGRAND, FOR WHICH A 10-FOLD
C   DENSER GRID IS USED). DEFAULT IS EINCR=1. EV.
C  CH,CS,NPRIN NOT USED HERE                                             090680
C  NS IS NO. OF THEORETICAL GEOMETRIES TO BE READ IN (INCLUDING THOSE
C   TO BE SKIPPED).
C  NSPL IS NO. OF GEOMETRIES IN EACH SET OF LOGICALLY CONSECUTIVE        090680
C   GEOMETRIES. THE NS INPUT GEOMETRIES ARE ASSUMED TO FALL IN NS/NSPL   090680
C   SETS, WITHIN EACH OF WHICH ONLY ONE STRUCTURAL PARAMETER (E.G. A     090680
C   LAYER SPACING) VARIES. THE VARIATION SHOULD BE IN NSPL-1 EQUAL       090680
C   STEPS AND THE PARAMETER VALUES AVAILABLE IN THE INPUT VECTOR VALUES. 090680
C   THIS FEATURE IS ONLY USED IN ROUTINE RMSRD. DEFAULT IS NSPL=1.       090680
C  NBLOW= 1 OR 0 FOR BLOWUP OR NOT OF INTENSITIES AT HIGHER ENERGIES
C   (IN PLOTS ONLY). DEFAULT IS NBLOW=0
C  BLOWX GIVES (AS FRACTION OF THE ENERGY INTERVAL OVER WHICH
C   INTENSITIES ARE AVAILABLE IN ANY GIVEN BEAM) THE ENERGY ABOVE WHICH
C   BLOWUP OF INTENSITIES OCCURS IF NBLOW=1. DEFAULT IS BLOWX=1/3.
C  LIMFIL IS NO. OF FILES (SEPARATED BY EOF MARKS) FROM WHICH CONSECUT-
C   IVE THEOR. DATA WILL BE READ (SEE SUBROUTINE RDPL). DEFAULT IS
C   LIMFIL=1.
C  IPR CONTROLS AMOUNT OF PRINTOUT ON UNIT 6 (SHORTEST VERSION OF
C   PRINTOUT IS PROVIDED ON UNIT 8). DEFAULT IS IPR=1.
C    - IPR=0 - OUTPUT OF OVERVIEW OF INPUT PARAMETERS AND OF ALL R-FACTORS
C    - IPR=1 - ADDITIONAL PRINTOUT OF RAW INPUT EXP. ENERGIES AND
C              INTENSITIES, PLOTS OF EXP. CURVES (AFTER AVERAGING,
C              SMOOTHING, INTERPOLATION AND RENORMALIZATION), AND PLOTS
C              OF EXP. AND THEOR. CURVES SIDE BY SIDE (SEE PARAMETER
C              DRFAC)
C    - IPR=2 - ADDITIONAL PRINTOUT OF EXP. AND THEOR. DATA AFTER
C              AVERAGING, SMOOTHING (FOR EXP. ONLY), INTERPOLATION AND
C              RENORMALIZATION, AS WELL AS PENDRY Y FUNCTION.
C  VI= IMAGINARY PART OF INNER POTENTIAL USED IN PENDRY Y FUNCTION.
C   DEFAULT IS VI=4. EV.
C  !!!!!!  NEW VARIABLE 'V0RR' IN NAMELIST 'NL 1'  !!!!!!!!!
C  V0RR IS REAL PART OF INNER POTENTIAL AS GIVEN IN LEED PROGRAMS
C  V01,V02 ARE LIMITS ON THE INNER POTENTIAL VARIATION (V01.LE.V02,
C   POSITIVE V0 IMPLIES LESS NEGATIVE INNER POT. IN THE THEORY,
C   V01 AND V02 SHOULD BE MULTIPLES OF EINCR).DEFAULTS ARE V01=-6.,
C    V02=6. EV, RESP.
C  VINCR (.GT.0.) IS STEP FOR INNER POTENTIAL VARIATION. DEFAULT IS
C   2. EV.
C  DRFAC IS USED TO PLOT BEST THEOR. IV-CURVES. AS THE PROGRAM SCANS
C   THROUGH THE GIVEN THEOR. GEOMETRIES AND THE INNER POTENTIAL
C   VARIATIONS, THE AVERAGE R-FACTOR ARAV FOR THE CURRENT GEOMETRY
C   AND INN. POT. IS COMPARED WITH THE BEST AVERAGE R-FACTOR VALUE
C   BARAV OBTAINED SO FAR. IF ARAV.LT.BARAV+DRFAC AND IPR=1, THE
C   CURRENT EXP. AND THEOR. IV-CURVES ARE PRINTER-PLOTTED SIDE BY SIDE.
C   DEFAULT IS DRFAC=0.1.
C     ***** CAUTION - UNLESS DRFAC IS SMALL, LARGE AMOUNTS OF
C                     OUTPUT MAY BE PRODUCED
C  IREN=1 OR 0 TO RENORMALIZE OR NOT THE EXP. AND THEOR. IV-CURVES
C   (CURVES CAN BE DIVIDED BY FITTED A*EXP(-ALPH*(E+10)), CF.
C   SUBROUTINE RENORM). DEFAULT IS IREN=1.
C  ISMOTH IS NO. OF TIMES EXP. IV-CURVES WILL BE SMOOTHED BY
C   3-POINT SMOOTHING FORMULA. DEFAULT IS ISMOTH=2.
C
C  IBP INDICATES RELATIONSHIP BETWEEN THEOR. AND EXP. BEAMS.
C   IBP(I)=J INDICATES THAT THE J-TH THEOR. BEAM ( COUNTED AFTER
C   DOMAIN-AVERAGING, I.E. ACCORDING TO THE NUMBERS KAV) CORRESPONDS
C   TO THE I-TH EXP. BEAM (AFTER AVERAGING OVER DIFFERENT EXPERIMENTS,
C   I.E. ACCORDING TO THE NUMBERS NBEA). DEFAULT IS IBP=1,2,3,...
C   WHEN J=0, THE (EXP.) BEAM I IS SKIPPED.
C  NSSK IS LIST OF GEOMETRIES TO BE SKIPPED. E.G. NSSK=4,7,8 SKIPS
C   4TH,7TH AND 8TH GEOMETRIES. DEFAULT IS NO SKIPPING.
C  WB ARE WEIGHTS FOR DIFFERENT BEAMS (COUNTING BY NUMBERS NBEA),
C   USED TO OBTAIN R-FACTORS AVERAGED OVER BEAMS. WB SHOULD NOT
C   INCLUDE WEIGHTS FOR DIFFERING ENERGY RANGES, SINCE THESE ARE
C   ALREADY PROGRAMMED IN. DEFAULT IS WB=1. FOR ALL BEAMS.
C  WR ARE WEIGHTS USED IN OBTAINING THE AVERAGE OVER THE TEN
C   DIFFERENT R-FACTORS. DEFAULT IS WR=1. FOR ALL R-FACTORS, EXCEPT =0.  271279
C   FOR R1, RP1, RPP1 AND RMZJ (2ND, 4TH, 6TH AND 9TH R-FACTORS).        271279
C   WR=0. CAN BE USED TO IGNORE SOME R-FACTORS IN THE AVERAGE.
C
C  DEFAULT VALUES IN NAMELIST NL1 -
      EMIN=0.
      EMAX=220.
      EINCR=1.
      NSPL=1                                                             090680
      NBLOW=0
      BLOWX=1./3.
      LIMFIL=1
      IPR=1
      VI=4.
      V01=-6.
      V02=6.
      VINCR=2.
      DRFAC=.1
      IREN=1
      ISMOTH=2
CHL           OPEN(6,FILE='PROT',STATUS='NEW')
C MUNICH     OPEN(6,FILE='PROT')
CHL           OPEN(7,FILE='ROUT',STATUS='NEW')
             OPEN(7,FILE='ROUT')
             OPEN(8,FILE='WEXPEL',STATUS='OLD')
             REWIND(8)
C
C  READ IN ANY NON-DEFAULT VALUES OF THE
C  NAMELIST VARIABLES (ALL OF THESE TO BE SUPPLIED BY USER)
      READ(8,NL1)
C     WRITE(6,NL1)
C     WRITE(8,NL1)
C  READ BEAM GROUPINGS FOR AVERAGING OF TH. DATA (TO BE SUPPLIED BY USER).
C  KAV=1 FOR THE FIRST GROUP OF BEAMS TO BE AVERAGED, KAV=N FOR THE N-TH
C  GROUP, ETC.
C  (KAV.LE.NBTD MUST ALWAYS HOLD)
C  NBTD AND NBED ARE NO.S OF THEOR. AND EXP. BEAMS TO BE READ IN
C  (INCLUDING THOSE TO BE AVERAGED OVER)
      READ(8,2)NBTD,NBED
      WRITE(6,8)NBTD,NBED                                               0404875
C     WRITE(8,8)NBTD,NBED
C     WRITE(9,8)NBTD,NBED
C     WRITE(10,8)NBTD,NBED
C     WRITE(11,8)NBTD,NBED
8     FORMAT(13H0NBTD,NBED = ,2I4)                                      0404875
      READ(8,2)(KAV(J),J=1,NBTD)
2     FORMAT(5(25I3,/))
      WRITE(6,5)(KAV(J),J=1,NBTD)
C     WRITE(8,5)(KAV(J),J=1,NBTD)
5     FORMAT(33H0AVERAGING SCHEME OF THEOR. BEAMS,5(25I3,/))
      read(8,*)
      read(8,2) (MITTEL(I),I=1,NBED)
C  DEFAULT VALUES IN NAMELIST NL2 -
      DO 1 I=1,10
1     WR(I)=1.
      WR(2)=0.                                                           271279
      WR(4)=0.                                                           271279
      WR(6)=0.                                                           271279
      WR(9)=0.                                                           271279
      NBM=NBED                                                           040280
      IF (NBTD.EQ.0.OR.NBED.EQ.0) NBM=MAX0(NBTD,NBED)                    040280
      DO 3 IB=1,NBM
      BENAME(1,IB)=0.
      BENAME(2,IB)=0.
      WB(IB)=1.
3     IBP(IB)=IB
cvb      DO 4 IS=1,NS
      DO 4 IS=1,MNG
4     NSSK(IS)=0
CC  DEFAULT VALUES                                                        260187
C      DATA MITTEL/1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0/   260187
C  READ IN RELATIONSHIP BETWEEN THEOR. AND EXP. BEAMS, LIST OF
C  GEOMETRIES TO BE SKIPPED, AND BEAM AND R-FACTOR WEIGHTS
      READ(8,NL2)
C     WRITE(6,NL2)
C     WRITE(8,NL2)
C  NSS WILL BE NO. OF GEOMETRIES REMAINING AFTER SKIPPING
      NSS=0
      DO 6 IS=1,NS
6     IF (NSSK(IS).EQ.0) NSS=NSS+1
C
C
      IF (NBED.EQ.0) GO TO 21
C  READ AND PRINT DESCRIPTION OF EXPERIMENT
      READ(8,22)TEXT
      WRITE(6,24)TEXT
C     WRITE(8,24)TEXT
      IF (NBED.EQ.0.OR.NBTD.EQ.0) GO TO 7
C     WRITE(9,24)TEXT
C     WRITE(10,24)TEXT
C     WRITE(11,24)TEXT
7     CALL READE(AE,EE,NBED,NEE,NBEA,BENAME,IPR)
C  AVERAGE DATA FROM DIFFERENT EXPERIMENTS AND ORDER BY INCREASING ENERGY
      CALL EXPAV(AE,EE,NBED,NEE,BENAME,NBEA,NBE,IPR,XPL,NNN)
C  SMOOTH EXP. DATA THE NUMBER OF TIMES DESIRED
      IF (ISMOTH.EQ.0) GO TO 15
      DO 10 I=1,ISMOTH
10    CALL SMOOTH(AE,EE,NBED,NBE,NEE,IPR)
15    CONTINUE
C  INTERPOLATE EXP. DATA TO WORKING GRID (MULTIPLES OF EINCR EV)
      CALL INTPOL(AE,1,NBED,NEE,1,NBE,EE,EINCR,IPR,XPL,YPL)
C  RENORMALIZE EXP. BY DIVIDING BY FITTED A*EXP(-ALPH*(E+10))
C     IF (IREN.EQ.1) CALL RENORM(AE,1,NBED,1,NBE,NEE,EE,IPR,YPL)
C  PRODUCE 1ST AND 2ND DERIVATIVES OF EXP. DATA
      CALL DER(AE,NEE,1,NBED,1,NBE,AEP,EINCR)
      CALL DER(AEP,NEE,1,NBED,1,NBE,AEPP,EINCR)
C  PRODUCE PENDRY Y FUNCTION FOR EXP. DATA
      CALL YPEND(AE,AEP,1,NBED,1,NBE,NEE,EE,YE,VI,IPR)
C  PRODUCE SOME INTEGRALS OVER EXP. DATA
      DO 20 IB=1,NBE
      IE2=NEE(IB)
      IF (IE2.EQ.0) GO TO 20
      TSE(IB)=0.
      TSE2(IB)=0.
      TSEP(IB)=0.
      TSEP2(IB)=0.
      TSEPP(IB)=0.
      TSEPP2(IB)=0.
      TSEY2(IB)=0.
      CALL VARSUM(AE,AE,AE,AE,1,1,NBED,1,1,1,IB,1,1,IE2,0,EINCR,
     10.,0.,1,TSE(IB),YPL)
      IF (WR(3).LT.1.E-6) GO TO 16
      CALL VARSUM(AE,AE,AE,AE,1,1,NBED,1,1,1,IB,1,1,IE2,0,EINCR,
     10.,0.,2,TSE2(IB),YPL)
16    IF (WR(4).LT.1.E-6) GO TO 17
      CALL VARSUM(AEP,AE,AE,AE,1,1,NBED,1,1,1,IB,1,1,IE2,0,EINCR,
     10.,0.,3,TSEP(IB),YPL)
17    IF (WR(5).LT.1.E-6) GO TO 18
      CALL VARSUM(AEP,AE,AE,AE,1,1,NBED,1,1,1,IB,1,1,IE2,0,EINCR,
     10.,0.,2,TSEP2(IB),YPL)
18    IF (WR(6).LT.1.E-6.AND.WR(9).LT.1.E-6) GO TO 19
      CALL VARSUM(AEPP,AE,AE,AE,1,1,NBED,1,1,1,IB,1,1,IE2,0,EINCR,
     10.,0.,3,TSEPP(IB),YPL)
19    IF (WR(7).LT.1.E-6) GO TO 200
      CALL VARSUM(AEPP,AE,AE,AE,1,1,NBED,1,1,1,IB,1,1,IE2,0,EINCR,
     10.,0.,2,TSEPP2(IB),YPL)
200   IF (WR(10).LT.1.E-6) GO TO 20
      CALL VARSUM(YE,AE,AE,AE,1,1,NBED,1,1,1,IB,1,1,IE2,0,EINCR,
     10.,0.,2,TSEY2(IB),YPL)
20    CONTINUE
C  PRINTER-PLOT EXP., ITS 1ST AND 2ND DERIVATIVES AND ITS PENDRY Y
C  FUNCTION
C     IF (IPR.GE.1) CALL PLOTE(AE,AEP,AEPP,YE,NBED,NBE,EE,NEE,BENAME,
C    1NBLOW,BLOWX,XPL,YPL)
C
C
C
21    IF (NBTD.EQ.0) THEN
        write(6,*) "NBTD = 0 ?"
        STOP
      END IF
C
      CLOSE(8)
C MUNICH    OPEN(5,FILE='LEEDOUT',STATUS='OLD')
C MUNICH    REWIND(5)
C
C  READ AND WRITE DESCRIPTIVE TITLE OF THEOR. DATA (SUPPLIED BY LEED
C  PROGRAM)
      READ(5,22)TEXT
                     WRITE(7,24) TEXT
                     WRITE(7,3333)
3333  FORMAT(1X,/,5X,'BEAM',6X,'IBE',4X,'D12',4X,
     *'V0R',4X,'EMIN',4X,'EMAX',4X,'OVL',6X,'RAVP',                     141290
     * 4X,'RPE')                                                        141290
C    *'DCO2',4X,'V0R',4X,'EMIN',4X,'EMAX',4X,'OVL',6X,'RPE',            141290
C    * 4X,'RAVP')                                                       141290
      WRITE(6,24)TEXT
C     WRITE(8,24)TEXT
      IF (NBED.EQ.0.OR.NBTD.EQ.0) GO TO 26
C     WRITE(9,24)TEXT
C     WRITE(10,24)TEXT
C     WRITE(11,24)TEXT
22    FORMAT(19A4)
24    FORMAT(1H ,19A4)
C     WRITE(11,27)
27    FORMAT(38H0BEST BEAM R-FACTORS FOR EACH GEOMETRY)
C  NBTD IS NO. OF BEAMS TO BE READ IN (SUPPLIED BY THE LEED
C  PROGRAM) (SAME AS NBTD READ IN EARLIER)
26    READ(5,25)NBTD
      WRITE(7,25)NBTD
25    FORMAT(5(25I3,/))
C  READ IN CALCULATED ENERGIES AND INTENSITIES (IGNORE THOSE OUTSIDE THE
C  RANGE EMIN TO EMAX)
      CALL RDPL(ES,ATS,NSS,NBTD,NETI,VAL,VALUES,PQ,KAV,SYM,EMIN,EMAX,
     1LIMFIL,NSSK,NS,DCO1,DCO2)                                                 2875279
C  PERFORM DOMAIN-AVERAGING
      CALL RINTAV(ATS,NSS,NBTD,NETI,PQ,KAV,SYM,NBT,ES,IPR)
C  CHECK FOR TOO HIGH THEOR. INTENS.                                    121280
      DO 28 IB=1,NBT                                                    121280
      CALL MAXINT(ATS,NSS,NBTD,IB,NETI,AM)                              121280
      IF (AM.LE.1.) GO TO 28                                            121280
      WRITE(6,29)IB,AM                                                  121280
C     WRITE(8,29)IB,AM
C     WRITE(9,29)IB,AM
C     WRITE(10,29)IB,AM
C     WRITE(11,29)IB,AM
29    FORMAT(1H ,///,29H MAX. INTENS. IN THEOR. BEAM ,1I3,12H IS SUSPECT121280
     1(,1E13.5,29H)- ****** STOP PROGRAM ******)                        121280
      STOP                                                              121280
28    CONTINUE                                                          121280
C
C
C
C  START LOOP OVER GEOMETRIES
      BARAV=1.E2
      GARAV=1.E2
      GSARAV=1.E2                                                        090680
      ISPL=0                                                             090680
      DO 170 IS=1,NSS
      ISPL=ISPL+1                                                        090680
      WRITE(6,30)IS,VALUES(IS)
C     WRITE(8,30)IS,VALUES(IS)
30    FORMAT(14H1STRUCTURE NO.,1I5,23H CHARACTERIZED BY VALUE, 1F7.4)
                D12=VALUES(IS)
C     WRITE(8,115)
C  INTERPOLATE THEOR. DATA ONTO WORKING GRID
      DO 40 IB=1,NBT
40    NET(IB)=NETI
      CALL STRIP2(ATS,NSS,NBTD,NET,IS,AT,NBT,ES,ET)
      CALL INTPOL(AT,1,NBTD,NET,1,NBT,ET,EINCR,IPR,XPL,YPL)
C  RENORMALIZE TH. BY DIVIDING BY FITTED A*EXP(-ALPH*(E+10))
C     IF (IREN.EQ.1) CALL RENORM(AT,1,NBTD,1,NBT,NET,ET,IPR,YPL)
      IF (NBED.EQ.0) GO TO 55
C     WRITE(9,45)
45    FORMAT(36H0GEOM.  V0      INDIVIDUAL BEAMS    )
C     WRITE(10,46)
46    FORMAT(36H0GEOM.  V0      INDIVIDUAL R-FACTORS)
C  PRODUCE 1ST AND 2ND DERIVATIVE OF TH.
      CALL DER(AT,NET,1,NBTD,1,NBT,ATP,EINCR)
      CALL DER(ATP,NET,1,NBTD,1,NBT,ATPP,EINCR)
C  PRODUCE PENDRY Y FUNCTION FOR THEORY
      CALL YPEND(AT,ATP,1,NBTD,1,NBT,NET,ET,YT,VI,IPR)
C  PRODUCE SOME INTEGRALS OVER THEOR. DATA
      DO 50 IB=1,NBT
      IE2=NET(IB)
      IF (IE2.EQ.0) GO TO 50
      CALL VARSUM(AT,AT,AT,AT,1,1,NBTD,1,1,1,IB,1,1,IE2,0,EINCR,
     10.,0.,1,TST(IB),YPL)
      CALL VARSUM(YT,AT,AT,AT,1,1,NBTD,1,1,1,IB,1,1,IE2,0,EINCR,
     10.,0.,2,TSTY2(IB),YPL)
50    CONTINUE
C
C
C
C  START LOOP OVER INNER POTENTIAL VALUES
55    NV0=INT((V02-V01)/VINCR+0.0001)+1
      V0=V01
      DO 160 IV=1,NV0
      WRITE(6,60)V0
60    FORMAT(34H0THEOR. INNER POTENTIAL SHIFTED BY,1F7.2,3H EV)
                V0R=-V0RR+V0
      AROS=0.
      AR1=0.
      AR2=0.
      ARP1=0.
      ARP2=0.
      ARPP1=0.
      ARPP2=0.
      ARRZJ=0.
      ARMZJ=0.
      ARPE=0.
      ARAV=0.
      ERANG=0.
              RAZZ=0.
              RANN=0.
              RAVP=0.
      DO 132 I=1,2                                                       260187
         ERANGM(I)=0.                                                    260187
         ARPEM(I)=0.                                                     260187
         RAZZM(I)=0.                                                     260187
         RANNM(I)=0.                                                     260187
         RAVPM(I)=0.                                                     260187
132   CONTINUE                                                           260187
C
C
C
      DO 62 IB=1,NBTD
      NST1(IB)=0
62    NST2(IB)=0
      ICO=0
C  START LOOP OVER (EXP.) BEAMS, OR THEOR. BEAMS IF NBED=0
      IF (NBED.EQ.0) NBE=NBT
      DO 130 IBE=1,NBE
      KMIT=MITTEL(IBE)                                                  260187
C  IBT INDICATES THE THEOR. BEAM CORRESPONDING TO THE EXP. BEAM IBE
      IBT=IBP(IBE)
      IF (NBED.NE.0) GO TO 64
      NST1(IBE)=1                                                       110380
      NST2(IBE)=NET(IBT)                                                110380
      GO TO 130
64    IF (IBT.NE.0) GO TO 68
C  SKIP SOME BEAMS
      NST1(IBE)=0                                                       110380
      NST2(IBE)=0                                                       110380
      WRITE(6,66)IBE,(BENAME(I,IBE),I=1,5)
66    FORMAT(14H0EXP. BEAM NO.,1I3,10H SKIPPED (,5A4,1H))
      GO TO 130
68    WRITE(6,70)IBE,(BENAME(I,IBE),I=1,5),IBT,(PQ(I,IBT),I=1,2)
70    FORMAT(9H0BEAM NO.,1I3,10H IN EXP. (,5A4,20H), WHICH IS BEAM NO.,
     11I3,12H IN THEORY (,2F6.3,1H))
      ROS(IBE)=0.
      R1(IBE)=0.
      R2(IBE)=0.
      RP1(IBE)=0.
      RP2(IBE)=0.
      RPP1(IBE)=0.
      RPP2(IBE)=0.
      RRZJ(IBE)=0.
      RMZJ(IBE)=0.
      RPE(IBE)=0.
      RAV(IBE)=0.
C  DETERMINE ENERGY INTERVAL COMMON TO EXP. AND THEORY. THIS INTERVAL,
C  OF LENGTH EET, IS BOUNDED BY THE GRID POINTS (NE1,NE2) AND (NT1,NT2)
C  FOR EXP. AND THEORY, RESP.
      CALL COMNEI(EE,NBED,NEE,ET,NBTD,NET,IBE,IBT,V0,EINCR,NE1,NE2,
     1NT1,NT2,EET(IBE))
      IF (NT2.GT.NT1) GO TO 71                                          040280
      WRITE(6,705)IBE                                                     .
C     WRITE(8,705)IBE
705   FORMAT(48H0 **** NO OVERLAP THEOR./EXP. IN (EXP.) BEAM NO.,1I3)
                WRITE(7,4444) (BENAME(I,IBE),I=1,3),IBE,D12,
     *          V0R,     EMIN,EMAX,0.,0.
4444            FORMAT(3A4,I6,F8.4,4F8.2,1F8.4,8X)
      GO TO 130
71    NST1(IBE)=NT1                                                     110380
      NST2(IBE)=NT2                                                     110380
C  FIND EPS = MAX(ABS(DERIV. OF EXP.)) AND SAME FOR THEORY,
C  FOR ZANAZZI-JONA R-FACTOR
      CALL EPSZJ(AEP,NBED,IBE,NE1,NE2,EPSE)
      CALL EPSZJ(ATP,NBTD,IBT,NT1,NT2,EPST)
C  IF ANY IV-CURVE IS TRUNCATED, THE INTEGRALS PERFORMED BEFORE SHOULD
C  BE REDUCED ACCORDINGLY
      NE=NEE(IBE)
      NT=NET(IBT)
      SS=0.
      SS2=0.
      SSP=0.
      SSP2=0.
      SSPP=0.
      SSPP2=0.
      SSY2=0.
      SU=0.
      SU2=0.
      SUP=0.
      SUP2=0.
      SUPP=0.
      SUPP2=0.
      SUY2=0.
      IF (NE1.EQ.1) GO TO 80
      CALL VARSUM(AE,AE,AE,AE,1,1,NBED,1,1,1,IBE,1,1,NE1,0,EINCR,
     10.,0.,1,SS,YPL)
      IF (WR(3).LT.1.E-6) GO TO 72
      CALL VARSUM(AE,AE,AE,AE,1,1,NBED,1,1,1,IBE,1,1,NE1,0,EINCR,
     10.,0.,2,SS2,YPL)
72    IF (WR(4).LT.1.E-6) GO TO 73
      CALL VARSUM(AEP,AE,AE,AE,1,1,NBED,1,1,1,IBE,1,1,NE1,0,EINCR,
     10.,0.,3,SSP,YPL)
73    IF (WR(5).LT.1.E-6) GO TO 74
      CALL VARSUM(AEP,AE,AE,AE,1,1,NBED,1,1,1,IBE,1,1,NE1,0,EINCR,
     10.,0.,2,SSP2,YPL)
74    IF (WR(6).LT.1.E-6.AND.WR(9).LT.1.E-6) GO TO 75
      CALL VARSUM(AEPP,AE,AE,AE,1,1,NBED,1,1,1,IBE,1,1,NE1,0,EINCR,
     10.,0.,3,SSPP,YPL)
75    IF (WR(7).LT.1.E-6) GO TO 76
      CALL VARSUM(AEPP,AE,AE,AE,1,1,NBED,1,1,1,IBE,1,1,NE1,0,EINCR,
     10.,0.,2,SSPP2,YPL)
76    IF (WR(10).LT.1.E-6) GO TO 80
      CALL VARSUM(YE,AE,AE,AE,1,1,NBED,1,1,1,IBE,1,1,NE1,0,EINCR,
     10.,0.,2,SSY2,YPL)
80    IF (NE2.EQ.NE) GO TO 90
      CALL VARSUM(AE,AE,AE,AE,1,1,NBED,1,1,1,IBE,1,NE2,NE,0,EINCR,
     10.,0.,1,SU,YPL)
      IF (WR(3).LT.1.E-6) GO TO 82
      CALL VARSUM(AE,AE,AE,AE,1,1,NBED,1,1,1,IBE,1,NE2,NE,0,EINCR,
     10.,0.,2,SU2,YPL)
82    IF (WR(4).LT.1.E-6) GO TO 83
      CALL VARSUM(AEP,AE,AE,AE,1,1,NBED,1,1,1,IBE,1,NE2,NE,0,EINCR,
     10.,0.,3,SUP,YPL)
83    IF (WR(5).LT.1.E-6) GO TO 84
      CALL VARSUM(AEP,AE,AE,AE,1,1,NBED,1,1,1,IBE,1,NE2,NE,0,EINCR,
     10.,0.,2,SUP2,YPL)
84    IF (WR(6).LT.1.E-6.AND.WR(9).LT.1.E-6) GO TO 85
      CALL VARSUM(AEPP,AE,AE,AE,1,1,NBED,1,1,1,IBE,1,NE2,NE,0,EINCR,
     10.,0.,3,SUPP,YPL)
85    IF (WR(7).LT.1.E-6) GO TO 86
      CALL VARSUM(AEPP,AE,AE,AE,1,1,NBED,1,1,1,IBE,1,NE2,NE,0,EINCR,
     10.,0.,2,SUPP2,YPL)
86    IF (WR(10).LT.1.E-6) GO TO 90
      CALL VARSUM(YE,AE,AE,AE,1,1,NBED,1,1,1,IBE,1,NE2,NE,0,EINCR,
     10.,0.,2,SUY2,YPL)
90    CONTINUE
      SE=TSE(IBE)-SS-SU
      SE2=TSE2(IBE)-SS2-SU2
      SEP=TSEP(IBE)-SSP-SUP
      SEP2=TSEP2(IBE)-SSP2-SUP2
      SEPP=TSEPP(IBE)-SSPP-SUPP
      SEPP2=TSEPP2(IBE)-SSPP2-SUPP2
      SEY2=TSEY2(IBE)-SSY2-SUY2
      SS=0.
      SSY2=0.
      SU=0.
      SUY2=0.
      IF (NT1.EQ.1) GO TO 100
      CALL VARSUM(AT,AT,AT,AT,1,1,NBTD,1,1,1,IBT,1,1,NT1,0,EINCR,
     10.,0.,1,SS,YPL)
      IF (WR(10).LT.1.E-6) GO TO 100
      CALL VARSUM(YT,AT,AT,AT,1,1,NBTD,1,1,1,IBT,1,1,NT1,0,EINCR,
     10.,0.,2,SSY2,YPL)
100   IF (NT2.EQ.NT) GO TO 110
      CALL VARSUM(AT,AT,AT,AT,1,1,NBTD,1,1,1,IBT,1,NT2,NT,0,EINCR,
     10.,0.,1,SU,YPL)
      IF (WR(10).LT.1.E-6) GO TO 110
      CALL VARSUM(YT,AT,AT,AT,1,1,NBTD,1,1,1,IBT,1,NT2,NT,0,EINCR,
     10.,0.,2,SUY2,YPL)
110   CONTINUE
      ST=TST(IBT)-SS-SU
      STY2=TSTY2(IBT)-SSY2-SUY2
C  NORMALIZATION FACTOR EXP.-THEORY
      C=SE/ST
      CEPST=C*EPST
                    WRITE(6,112)C
112   FORMAT(28H NORMALIZATION C EXP/THEOR =,1E13.5)
C  PRODUCE INTEGRALS INVOLVING BOTH EXP. AND THEORY
      NV=NT1-NE1
      IF (WR(2).LT.1.E-6) GO TO 201
      CALL VARSUM(AE,AT,AE,AE,1,1,NBED,NBTD,1,1,IBE,IBT,NE1,NE2,
     1NV,EINCR,0.,C,4,S,YPL)
201   IF (WR(3).LT.1.E-6) GO TO 202
      CALL VARSUM(AE,AT,AE,AE,1,1,NBED,NBTD,1,1,IBE,IBT,NE1,NE2,
     1NV,EINCR,0.,C,5,S2,YPL)
202   IF (WR(4).LT.1.E-6) GO TO 203
      CALL VARSUM(AEP,ATP,AE,AE,1,1,NBED,NBTD,1,1,IBE,IBT,NE1,NE2,
     1NV,EINCR,0.,C,4,SP,YPL)
203   IF (WR(5).LT.1.E-6) GO TO 204
      CALL VARSUM(AEP,ATP,AE,AE,1,1,NBED,NBTD,1,1,IBE,IBT,NE1,NE2,
     1NV,EINCR,0.,C,5,SP2,YPL)
204   IF (WR(6).LT.1.E-6) GO TO 205
      CALL VARSUM(AEPP,ATPP,AE,AE,1,1,NBED,NBTD,1,1,IBE,IBT,NE1,NE2,
     1NV,EINCR,0.,C,4,SPP,YPL)
205   IF (WR(7).LT.1.E-6) GO TO 206
      CALL VARSUM(AEPP,ATPP,AE,AE,1,1,NBED,NBTD,1,1,IBE,IBT,NE1,NE2,
     1NV,EINCR,0.,C,5,SPP2,YPL)
206   IF (WR(8).LT.1.E-6) GO TO 207
      CALL VARSUM(AEP,ATP,AEPP,ATPP,1,1,NBED,NBTD,1,1,IBE,IBT,NE1,NE2,
     1NV,EINCR,EPSE,C,6,SRZJ,YPL)
207   IF (WR(9).LT.1.E-6) GO TO 208
      CALL VARSUM(AEP,ATP,AEPP,ATPP,1,1,NBED,NBTD,1,1,IBE,IBT,NE1,NE2,
     1NV,EINCR,CEPST,C,6,SMZJ,YPL)
208   IF (WR(10).LT.1.E-6) GO TO 209
      CALL VARSUM(YE,YT,YE,YE,1,1,NBED,NBTD,1,1,IBE,IBT,NE1,NE2,
     1NV,EINCR,0.,1.,5,SY2,YPL)
C
C  PRODUCE R-FACTORS (ALL ARE NORMALIZED TO ABOUT 1 FOR ANTICORRELATED
C  CURVES,I.E. FOR (SIN(E))**2 COMPARED WITH (COS(E))**2 OVER ONE PERIOD)
C +++++++  ACHTUNG: ABWEICHEND VON DER ORIGINAL-VERSION DES PROGRAMMS
C +++++++  WERDEN DIE R-FAKTOREN 'RPP1' (=NR. 6), 'RRZJ' (=NR. 8) UND
C +++++++  'RPE' (=NR. 10)  N I C H T  MIT 0.5 MULTIPLIZIERT.
209   IF (WR(1).LT.1.E-6) GO TO 210
C  R-FACTOR BASED ON FRACTION OF ENERGY INTERVAL WITH EXP. AND THEOR.
C  SLOPES OF OPPOSITE SIGNS
C     CALL OPSIGN(AEP,NBED,IBE,ATP,NBTD,IBT,EINCR,NE1,NE2,NV,ROS(IBE))
      ROS(IBE)=ROS(IBE)/EET(IBE)
      AROS=AROS+WB(IBE)*EET(IBE)*ROS(IBE)
C
210   IF (WR(2).LT.1.E-6) GO TO 211
C  R-FACTOR BASED ON INTEGRAL OF ABS(EXP-C*TH)
      R1(IBE)=0.75*S/SE
      AR1=AR1+WB(IBE)*EET(IBE)*R1(IBE)
C
211   IF (WR(3).LT.1.E-6) GO TO 212
C  R-FACTOR BASED ON INTEGRAL OF (EXP-C*TH)**2
      R2(IBE)=0.5*S2/SE2
      AR2=AR2+WB(IBE)*EET(IBE)*R2(IBE)
C
212   IF (WR(4).LT.1.E-6) GO TO 213
C  R-FACTOR AS R1 BUT USING 1ST DERIVATIVES
      RP1(IBE)=0.5*SP/SEP
      ARP1=ARP1+WB(IBE)*EET(IBE)*RP1(IBE)
C
213   IF (WR(5).LT.1.E-6) GO TO 214
C  R-FACTOR AS R2 BUT USING 1ST DERIVATIVES
      RP2(IBE)=0.25*SP2/SEP2
      ARP2=ARP2+WB(IBE)*EET(IBE)*RP2(IBE)
C
214   IF (WR(6).LT.1.E-6) GO TO 215
C  R-FACTOR AS R1 BUT USING 2ND DERIVATIVES
      RPP1(IBE)=1.0*SPP/SEPP
      ARPP1=ARPP1+WB(IBE)*EET(IBE)*RPP1(IBE)
C
215   IF (WR(7).LT.1.E-6) GO TO 216
C  R-FACTOR AS R2 BUT USING 2ND DERIVATIVES
      RPP2(IBE)=0.25*SPP2/SEPP2
      ARPP2=ARPP2+WB(IBE)*EET(IBE)*RPP2(IBE)
C
216   IF (WR(8).LT.1.E-6) GO TO 217
C  REDUCED R-FACTOR ACCORDING TO ZANAZZI-JONA (MULT. BY 0.5).
      RRZJ(IBE)=1.0*SRZJ/(0.027*SE)
      ARRZJ=ARRZJ+WB(IBE)*EET(IBE)*RRZJ(IBE)
C
217   IF (WR(9).LT.1.E-6) GO TO 218
C  R-FACTOR ACCORDING TO MODIFIED ZANAZZI-JONA FORMULA (MULT. BY 0.5).
C  EPS BASED ON EXP. INT. IS REPLACED BY EPS BASED ON THEOR. INT.  THE
C  NORMALIZ. INTEGRAL SE BASED ON INT. IS REPLACED BY AN EQUIVALENT
C  INTEGRAL BASED ON THE 2ND DERIVATIVE OF THE INT., THEREBY REMOVING
C  THE NEED FOR A REDUCED R-FACTOR (NO 0.027)
      RMZJ(IBE)=0.5*SMZJ/SEPP
      ARMZJ=ARMZJ+WB(IBE)*EET(IBE)*RMZJ(IBE)
C
218   IF (WR(10).LT.1.E-6) GO TO 219
C  R-FACTOR ACCORDING TO PENDRY (MULT. BY 0.5)
      RPE(IBE)=1.0*SY2/(SEY2+STY2)
      ARPE=ARPE+WB(IBE)*EET(IBE)*RPE(IBE)
              RAZZ=RAZZ+SY2*WB(IBE)
              RANN=RANN+SEY2*WB(IBE)+STY2*WB(IBE)
      IF ((KMIT .GT. 0).OR.(KMIT .LE. 2)) THEN                          260187
         ARPEM(KMIT)=ARPEM(KMIT)+WB(IBE)*EET(IBE)*RPE(IBE)              260187
         RAZZM(KMIT)=RAZZM(KMIT)+SY2*WB(IBE)                            260187
         RANNM(KMIT)=RANNM(KMIT)+SEY2*WB(IBE)+STY2*WB(IBE)              260187
      ENDIF                                                             260187
C
C  AVERAGE OVER ABOVE R-FACTORS
219   WS=0.
      DO 220 I=1,10
220   WS=WS+WR(I)
      RAV(IBE)=(WR(1)*ROS(IBE)+WR(2)*R1(IBE)+WR(3)*R2(IBE)
     1+WR(4)*RP1(IBE)+WR(5)*RP2(IBE)+WR(6)*RPP1(IBE)+WR(7)*RPP2(IBE)
     2+WR(8)*RRZJ(IBE)+WR(9)*RMZJ(IBE)+WR(10)*RPE(IBE))/WS
      ARAV=ARAV+WB(IBE)*EET(IBE)*RAV(IBE)
      ERANG=ERANG+WB(IBE)*EET(IBE)
      IF ((KMIT .GT. 0).OR.(KMIT .LE. 2)) THEN                          260187
         ERANGM(KMIT)=ERANGM(KMIT)+WB(IBE)*EET(IBE)                     260187
      ENDIF                                                             260187
      ICO=ICO+1
      IBM(ICO)=IBE
      WRITE(6,115)                                                       040280
115   FORMAT(95H   V0        EET    ROS    R1     R2     RP1    RP2    R
     1PP1   RPP2   RRZJ   RMZJ   RPE    RAV  )
C     IF (IPR.LT.1) GO TO 130
      WRITE(6,120)V0,EET(IBE),ROS(IBE),R1(IBE),R2(IBE),RP1(IBE),
     1RP2(IBE),RPP1(IBE),RPP2(IBE),RRZJ(IBE),RMZJ(IBE),RPE(IBE),RAV(IBE)
120   FORMAT(1H ,1F7.2,1F10.4,11F7.4)
                OVL=EET(IBE)
      IF (SBR.GE.2) THEN
       WRITE(7,4444) (BENAME(I,IBE),I=1,3),IBE,D12,V0R,
     * EMIN,EMAX,OVL,RPE(IBE)
      ENDIF
      EET(IBE)=WB(IBE)*EET(IBE)
130   CONTINUE
C  END OF LOOP OVER BEAMS
C
C
C
      IF (NBED.EQ.0) GO TO 155
      AR(1)=AROS/ERANG
      AR(2)=AR1/ERANG
      AR(3)=AR2/ERANG
      AR(4)=ARP1/ERANG
      AR(5)=ARP2/ERANG
      AR(6)=ARPP1/ERANG
      AR(7)=ARPP2/ERANG
      AR(8)=ARRZJ/ERANG
      AR(9)=ARMZJ/ERANG
      AR(10)=ARPE/ERANG
      AR(11)=ARAV/ERANG
      DO 137 I=1,2                                                      260187
         if (ERANGM(I) .gt. 0.0001) then
         ARM(I)=ARPEM(I)/ERANGM(I)                                      260187
         else
         ARM(I)=5.0000
         endif
137   CONTINUE                                                          260187
      WRITE(6,140)
140   FORMAT(23H0AVERAGE OVER ALL BEAMS)
      WRITE(6,120)V0,ERANG,(AR(I),I=1,11)
C     WRITE(8,120)V0,ERANG,(AR(I),I=1,11)
                OVL=ERANG
                XRPE=AR(10)
                RAVP=RAZZ/RANN
                DO 142 I=1,2                                             260187
                   OVLM(I)=ERANGM(I)                                     260187
                   XRPEM(I)=ARM(I)
                   IF (RANNM(I) .gt. 0.0001) then
                   RAVPM(I)=RAZZM(I)/RANNM(I)                            260187
                   else
                   RAVPM(I)=5.0000
                   endif
142             CONTINUE                                                 260187
C      WRITE(7,5553) -1,D12,V0R,EMIN,EMAX,OVLM(1),XRPEM(1),              260187
C    *               RAVPM(1)                                            260187
C      WRITE(7,5554) -2,D12,DCO1,DCO2,V0R,EMIN,EMAX,OVLM(2),XRPEM(2),    260187
C    *               RAVPM(2)                                            260187
C      WRITE(7,5555) 0,D12,DCO1,DCO2,V0R,EMIN,EMAX,OVL,XRPE,RAVP
      IF (SBR.GE.1) THEN 
        WRITE(7,5553) -1,D12,V0R,EMIN,EMAX,OVLM(1),RAVPM(1),            141290
     *               XRPEM(1)                                           141290
        WRITE(7,5554) -2,D12,V0R,EMIN,EMAX,OVLM(2),RAVPM(2),            141290
     *               XRPEM(2)                                           141290
      ENDIF
       WRITE(7,5555) 0,D12,V0R,EMIN,EMAX,OVL,RAVP,XRPE                  141290
5553            FORMAT('AV.-INTEGER ',I6,F8.4,4F8.2,2F8.4,'  <---')     260187
5554            FORMAT('AV.-HALF ORD',I6,F8.4,4F8.2,2F8.4,'  <---')     260187
5555            FORMAT('AVERAGE     ',I6,F8.4,4F8.2,2F8.4,'  <---')
C  STORE R-FACTORS FOR LATER ANALYSIS BY RCORR
C     CALL RSTOR(RAV,NBED,RST1,NSPL,ICO,NV0,ISPL,IV,IBM,1)
C     CALL RSTOR(EET,NBED,EETS,NSPL,ICO,NV0,ISPL,IV,IBM,1)
C     CALL RSTOR(AR,11,RST2,1,11,NV0,1,IV,IBM,0)
C  PRINTER-PLOT AVERAGE R-FACTORS (BOTH RAV AND AR) ON OUTPUT UNITS
C  9 AND 10, RESP.
C     CALL RGRAPH(RAV,1,1,1,1,NBE,AR,ICO,IBM,IS,V0,1,WR)
C  BARAV IS THE BEST AVERAGE R-FACTOR ARAV AMONG THE GEOMETRIES (AND
C  INNER POT. VARIATIONS) TRIED SO FAR IN THIS RUN, AND NSB AND BV0
C  THE CORRESPONDING GEOMETRY NO. AND INNER POTENTIAL SHIFT.
C  GARAV, IVG, GV0 ARE EQUIVALENT QUANTITIES FOR THE CURRENT GEOMETRY
C  ONLY, IVG INDEXING THE BEST INNER POTENTIAL VALUE GV0.
C  GSARAV, IVGS, GSV0 ARE EQUIVALENT QUANTITIES FOR THE CURRENT SET      090680
C  OF NSPL GEOMETRIES ONLY, IVGS INDEXING THE BEST INNER POT. VALUE GSV0. 090680
      IF (RAVP.GE.GARAV) GO TO 145
      GARAV=RAVP
      GV0=V0
      IVG=IV
      IF (RAVP.GE.GSARAV) GO TO 145                                      090680
      GSARAV=RAVP                                                        090680
      GSV0=V0                                                            090680
      IVGS=IV                                                            090680
      IF (RAVP.GE.BARAV) GO TO 145
      BARAV=RAVP
      NSB=IS
      BV0=V0
C  IF LAST AVERAGE R-FACTOR IS GOOD (COMPARED TO THE VALUES OBTAINED
C  SO FAR, AS JUDGED BY DRFAC), PRINTER-PLOT THE EXP. AND THEOR.
C  IV-CURVES FOR THE CURRENT GEOMETRY, WITH CURRENT INNER POT. SHIFT
C  INCLUDED. ONLY THE CURRENTLY USED ENERGY RANGE IS PLOTTED FOR THE
C  THEOR. CURVES
145   IF (RAVP.GT.(BARAV+DRFAC).OR.IPR.EQ.0) GO TO 160
      WRITE(6,150)
150   FORMAT(28H THIS GEOMETRY PLOTTED BELOW)
C     CALL PLOTT(AT,1,NBTD,1,NBT,NET,ET,NST1,NST2,IS,V0,EINCR,PQ,NBLOW,
C    1BLOWX,XPL,YPL,AE,NBED,EE,NEE,NBE,IBP,BENAME)
155   CONTINUE
160   V0=V0+VINCR
C  END OF INNER POTENTIAL LOOP
C
C
      IF (NBED.EQ.0) GO TO 170
      IF (NV0.LE.1) GO TO 163
C  ANALYZE POSITIONS OF MINIMA IN AVER. R-FACTORS RAV AND AR, RESP.,
C  FOR CURRENT GEOMETRY
C     CALL RCORR(RST1,NSPL,ICO,NV0,ISPL,VINCR,XPL,YPL,V01,1,WR)          0404875
C     CALL RCORR(RST2,1,11,NV0,1,VINCR,XPL,YPL,V01,0,WR)                 0404875
163   DO 165 IB=1,ICO
165   IBM(IB)=IB
C  PRINTER-PLOT BEST R-FACTORS FOR EACH BEAM FOR CURRENT GEOMETRY ON
C  OUTPUT UNIT 11 (BEST V0 IS CHOSEN)
C     CALL RGRAPH(RST1,NSPL,ISPL,NV0,IVG,ICO,AR,ICO,IBM,IS,GV0,0,WR)
      IF (ISPL.NE.NSPL) GO TO 170                                        090680
C  FIND STANDARD ERROR IN THE MEAN OF BEAM R-FACTOR VALUES AND OF THEIR     .
C  DERIVATIVES WITH RESPECT TO GEOMETRICAL CHANGES OF LAST NSPL
C  GEOMETRIES
C     CALL RMSRD(RST1,EETS,NSPL,ICO,NV0,IVGS,GSV0,VALUES,NSS,IS,RD,0)    0404875
      IF (NSPL.EQ.1) GO TO 170
C     CALL RMSRD(RST1,EETS,NSPL,ICO,NV0,IVGS,GSV0,VALUES,NSS,IS,RD,1)    0404875
      ISPL=0                                                                .
      GSARAV=1.E2                                                        090680
170   CONTINUE
C  END OF GEOMETRY LOOP
C
C
C
      IF (NBED.EQ.0) GO TO 178
      WRITE(6,175)NSB,VALUES(NSB),BV0,BARAV
      WRITE(7,175)NSB,VALUES(NSB),BV0,BARAV
C     WRITE(8,175)NSB,VALUES(NSB),BV0,BARAV
C     WRITE(9,175)NSB,VALUES(NSB),BV0,BARAV
C     WRITE(10,175)NSB,VALUES(NSB),BV0,BARAV
C     WRITE(11,175)NSB,VALUES(NSB),BV0,BARAV
175   FORMAT(31H0BEST GEOMETRY ENCOUNTERED, NO.,1I4,
     125H, CHARACTERIZED BY VALUE ,1F7.4,/,
     228H WITH INNER POTENTIAL SHIFT ,1F7.2,
     324H EV, AVERAGE R-FACTOR = ,1F7.4)
178   WRITE(6,180)
C     WRITE(8,180)
C     WRITE(9,180)
C     WRITE(10,180)
180   FORMAT(20H0CORRECT TERMINATION)
      STOP
      END
C-----------------------------------------------------------------------
C  SUBROUTINE BINSRX FINDS A REQUIRED INTERPOLATION INTERVAL
C  BY BINARY SEARCH (SUCCESSIVE HALVING OF INITIAL INTERVAL)
      SUBROUTINE BINSRX(IL, IH, X, WORX, LENGTH)
      DIMENSION WORX(LENGTH)
      I = (LENGTH + 1) / 2
      IHI =  (I + 1) / 2
      IF(X.LT. WORX(1) .OR. X .GE. WORX(LENGTH)) GO TO 100
20    CONTINUE
      IF(I .LT. 1) GO TO 40
      IF(I .GE. LENGTH) GO TO 30
      IF(X .GE.WORX(I) .AND. X .LE. WORX(I + 1)) GO TO 50
      IF(X .LT. WORX(I)) GO TO 30
40    I = IHI + I
      IHI = (IHI + 1) / 2
      GO TO 20
30    I = I - IHI
      IHI =(IHI + 1) / 2
      GO TO 20
50    IL = I
      IH = I + 1
      GO TO 110
100   IF(X .LT. WORX(1)) GO TO 105
102   IL = LENGTH - 1
      IH = LENGTH
      GO TO 110
105   IL = 1
      IH = 2
110   RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE COMNEI FINDS ENERGY INTERVAL COMMON TO EXP. AND THEORY    040280
      SUBROUTINE COMNEI(EE,NBED,NEE,ET,NBTD,NET,IBE,IBT,V0,EINCR,
     1NE1,NE2,NT1,NT2,EET)
C  FOR CDC ONLY  ***************************
C     LEVEL 2, ET,EE
      DIMENSION EE(NBED,1200),NEE(NBED),ET(NBTD,1200),NET(NBTD)
      NE=NEE(IBE)
      NT=NET(IBT)
      DE1=ET(IBT,1)+V0-EE(IBE,1)
      DE2=ET(IBT,NT)+V0-EE(IBE,NE)
      IF (DE1.LT.0.) GO TO 10
      NE1=INT((DE1/EINCR)+0.0001)+1
      NT1=1
      GO TO 20
10    NE1=1
      NT1=INT((-DE1/EINCR)+0.0001)+1
20    IF (DE2.LT.0.) GO TO 30
      NE2=NE
      NT2=NT-INT((DE2/EINCR)+0.0001)
      GO TO 40
30    NE2=NE-INT((-DE2/EINCR)+0.0001)
      NT2=NT
40    CONTINUE
      IF (NE2.GT.NE1) EET=EE(IBE,NE2)-EE(IBE,NE1)                       040280
      RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE DER CALCULATES 1ST DERIVATIVE (AFTER ZANAZZI-JONA)
      SUBROUTINE DER(Y,NE,NS,NBD,IS,NB,Y1,H)
      DIMENSION Y(NS,NBD,1200),NE(NBD),Y1(NBD,1200)
      DO 60 I=1,NB
      IF (NE(I).EQ.0) GO TO 60
      IF (NE(I).LT.23) GO TO 30
      JF=NE(I)-3
      DO 10 J=4,JF
10    Y1(I,J)=(Y(IS,I,J+3)-9.*Y(IS,I,J+2)+45.*Y(IS,I,J+1)
     1-45.*Y(IS,I,J-1)+9.*Y(IS,I,J-2)-Y(IS,I,J-3))/(60.*H)
      DO 20 J=1,3
      Y1(I,J)=(2.*Y(IS,I,J+3)-9.*Y(IS,I,J+2)+18.*Y(IS,I,J+1)
     1-11.*Y(IS,I,J))/(6.*H)
      M=NE(I)-J+1
20    Y1(I,M)=(11.*Y(IS,I,M)-18.*Y(IS,I,M-1)+9.*Y(IS,I,M-2)
     1-2.*Y(IS,I,M-3))/(6.*H)
      GO TO 60
30    IF (NE(I).LT.3) GO TO 50
      JF=NE(I)-1
      DO 40 J=2,JF
40    Y1(I,J)=(Y(IS,I,J+1)-Y(IS,I,J-1))/(2.*H)
      Y1(I,1)=(-3.*Y(IS,I,1)+4.*Y(IS,I,2)-Y(IS,I,3))/(2.*H)
      Y1(I,JF+1)=(-3.*Y(IS,I,JF+1)+4.*Y(IS,I,JF)-Y(IS,I,JF-1))/(2.*H)
      GO TO 60
50    Y1(I,1)=(Y(IS,I,2)-Y(IS,I,1))/H
      Y1(I,2)=Y1(I,1)
60    CONTINUE
      RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE EPSZJ CALCULATES THE ZANAZZI-JONA
C  EPS = MAX( ABS( DERIVATIVE ) )
      SUBROUTINE EPSZJ(AEP,NBED,IB,NE1,NE2,EPS)
      DIMENSION AEP(NBED,1200)
C  FOR CDC ONLY  ***************************
C     LEVEL 2, AEP
      EPS=0.
      DO 10 IE=NE1,NE2
      A=ABS(AEP(IB,IE))
10    IF (A.GT.EPS) EPS=A
      RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE EXPAV AVERAGES INTENSITIES FROM DIFFERENT EXPERIMENTS.    1002875
C  IT ALSO PUTS THEM IN ORDER OF INCREASING ENERGY                      1002875
      SUBROUTINE EXPAV(AE,EE,NBED,NEE,BENAME,NBEA,NBE,IPR,A,NV)
      DIMENSION AE(NBED,1200),EE(NBED,1200),NEE(NBED),NBEA(NBED),
     1A(1200), NV(1200),BENAME(5,NBED)
C     LEVEL 2, AE,EE
      NBE=1
      DO 90 IB=1,NBED
      IF (NBEA(IB).EQ.0) GO TO 90                                       040280
      EMIN=1.E6                                                         040280
      EMAX=0.                                                           040280
C  LOOP OVER BEAMS TO BE AVERAGED TOGETHER WITH BEAM IB TO OBTAIN       1002875
C  MINIMUM AND MAXIMUM ENERGIES                                         1002875
      DO 45 IB1=IB,NBED                                                 040280
      IF (NBEA(IB1).NE.NBEA(IB)) GO TO 45                               040280
      N=NEE(IB1)                                                        1002875
      DO 43 IE=1,N                                                      1002875
      IF (EMIN.LE.EE(IB1,IE)) GO TO 40                                  1002875
      EMIN=EE(IB1,IE)                                                   1002875
      IBMIN=IB1                                                         040280
40    CONTINUE                                                          1002875
      IF (EMAX.LT.EE(IB1,IE)) EMAX=EE(IB1,IE)                           1002875
43    CONTINUE                                                          1002875
45    CONTINUE                                                          040280
C  FIND ENERGY INCREMENT                                                1002875
      EMIP=1.E6                                                         1002875
      N=NEE(IBMIN)                                                      1002875
      DO 48 IE=1,N                                                      1002875
      EP=EE(IBMIN,IE)                                                   1002875
48    IF (EP.LT.EMIP.AND.EP.GT.(EMIN+.01)) EMIP=EP                      1002875
      DE=EMIP-EMIN                                                      1002875
      NEMAX=INT((EMAX-EMIN)/DE+0.0001)+1                                040280
      DO 50 IE=1,NEMAX                                                  040280
      NV(IE)=0
50    A(IE)=0.
      IEMAX=0
      NBEAT=NBEA(IB)                                                    040280
C  LOOP OVER SAME BEAMS AGAIN, AVERAGING OVER THESE BEAMS AND
C  REORDERING ENERGIES
      DO 70 IB1=IB,NBED                                                 040280
      IF (NBEA(IB1).NE.NBEAT) GO TO 70                                  040280
      NEMAX=NEE(IB1)
      DO 60 IE=1,NEMAX
      IEN=INT((EE(IB1,IE)-EMIN)/DE+0.0001)+1
      IF (IEN.GT.IEMAX) IEMAX=IEN
      A(IEN)=A(IEN)+AE(IB1,IE)
60    NV(IEN)=NV(IEN)+1
      NBEA(IB1)=0                                                       040280
70    CONTINUE                                                          040280
      DO 80 IE=1,IEMAX
      EE(NBE,IE)=EMIN+FLOAT(IE-1)*DE
80    AE(NBE,IE)=A(IE)/FLOAT(NV(IE))
      NEE(NBE)=IEMAX
C  KEEP NAME OF FIRST BEAM ENCOUNTERED IN SET OF BEAMS TO BE AVERAGED
      DO 85 I=1,5
85    BENAME(I,NBE)=BENAME(I,IB)
      NBE=NBE+1
90    CONTINUE
      NBE=NBE-1
      IF (IPR.LT.2) GO TO 120
      DO 100 IB=1,NBE
      N=NEE(IB)
100   WRITE(6,110)IB,(EE(IB,IE),AE(IB,IE),IE=1,N)
110   FORMAT(48H0EXP. ENERG. AND INTENS. AFTER AVERAGING IN BEAM,1I4,/,
     150(5(1F7.2,1E13.4,3X),/))
120   RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE INTPOL INTERPOLATES LEED INTENSITIES ONTO A WORKING        230480
C  GRID (WITH STEPS OF EINCR EV)
      SUBROUTINE INTPOL(A,NS,NBD,NE,IS,NB,E,EINCR,IPR,X,WORYT)
      DIMENSION WORYT(1200),X(1200),A(NS,NBD,1200),E(NBD,1200),NE(NBD)
C  FOR CDC ONLY  ***************************
C     LEVEL 2, A,E
      ITIL=0
      ITIH=0
      DO 60 IB=1,NB
      NEM=NE(IB)
C  FIND FIRST NON-ZERO INTENSITY (FOR THEORY, WHERE NON-EMERGENCE OF
C  CURRENT BEAM CAN OCCUR)
      DO 30 IE=1,NEM
      IMIN=IE
      IF (A(IS,IB,IE).GT.1.E-6) GO TO 40
30    CONTINUE
40    CONTINUE
      IF (IMIN.EQ.NEM) GO TO 9                                           200480
      LMIN=INT((E(IB,IMIN)-0.0001)/EINCR)+1
      LMIN=MAX0(LMIN,0)
      XMIN=FLOAT(LMIN)*EINCR
      NEM=NE(IB)
      LMAX=INT((E(IB,NEM)+0.0001)/EINCR)
      XMAX=FLOAT(LMAX)*EINCR
C  NPTS IS NO. OF POINTS USED ON THE INTERPOLATION GRID
      NPTS=LMAX-LMIN+1
      NE(IB)=NPTS
      DO 5 I=IMIN,NEM
      X(I-IMIN+1)=E(IB,I)
5     WORYT(I-IMIN+1)=A(IS,IB,I)
      NEM=NEM-IMIN+1
      IF (NEM.GE.1) GO TO 8
C  TOO FEW ENERGY VALUES FOR INTERPOLATION. THIS BEAM WILL BE SKIPPED
C  FROM NOW ON
9     NE(IB)=0                                                           200480
      WRITE(6,6)                                                         230480
C     WRITE(8,6)
6     FORMAT(59H0** IN PRESENT BEAM TOO FEW ENERGY VALUES FOR INTERPOLAT 230480
     1ION)
      GO TO 60
8     CONTINUE
      XVAL=XMIN-EINCR
      DO 10 I = 1, NPTS
      XVAL = XVAL+EINCR
C  INTERPOLATE (AND SET NEGATIVE INTENSITIES TO ZERO)
      A(IS,IB,I) = YVAL(XVAL,WORYT,X,NEM,ITIL,ITIH)
10    IF (A(IS,IB,I).LT.0.0) A(IS,IB,I)=0.0
      E(IB,1)=XMIN
      DO 50 IE=2,NPTS
50    E(IB,IE)=E(IB,IE-1)+EINCR
60    CONTINUE
      IF (IPR.LT.2) GO TO 90
      DO 70 IB=1,NB
      N=NE(IB)
      IF (N.EQ.0) GO TO 70
      WRITE(6,80)IB,(E(IB,IE),A(IS,IB,IE),IE=1,N)
80    FORMAT(40H0INTENSITIES AFTER INTERPOLATION IN BEAM,1I4,
     1/,50(5(1F7.2,1E13.4,3X),/))
70    CONTINUE
90    RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE MAXINT FINDS THE MAXIMUM VALUE OF MATRIX ELEMENTS,         121280
C  SKIPPING UNDESIRED GEOMETRIES
      SUBROUTINE MAXINT(A,NS,NBD,IB,NE,AM)
      DIMENSION A(NS,NBD,200)
C  FOR CDC ONLY *******************
C     LEVEL 2, A
      AM=0.
      DO 30 IS=1,NS
      DO 20 IE=1,NE
20    IF (A(IS,IB,IE).GT.AM) AM=A(IS,IB,IE)
30    CONTINUE
      RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE RCORR FINDS SPREAD IN POSITIONS OF MINIMA W.R.T. V0 IN
C  AVERAGE R-FACTORS FOR DIFFERENT BEAMS OR DIFFERENT TYPES OF R-FACTORS
C  FOR A GIVEN GEOMETRY. OUTPUT IS THE NUMBER OF BEAMS (OR R-FACTORS)
C  THAT DO NOT HAVE A GLOBAL MINIMUM OF THE R-FACTOR VALUES IN THE GIVEN
C  INNER POTENTIAL VARIATION RANGE, AND THE MAXIMUM DEVIATION IN INNER
C  POTENTIAL BETWEEN THE MINIMA FOR THE REMAINING BEAMS (OR R-FACTORS)
c      SUBROUTINE RCORR(RST,NSPL,ICO,NV0,ISPL,VINCR,R1,V,V01,IM,WR)       090680
c      DIMENSION RST(NSPL,ICO,NV0),R1(NV0),V(NV0),WR(10)                  090680
C  FOR CDC ONLY  ********************
C     LEVEL 2, RST
c      DO 10 IV=1,NV0
c10    V(IV)=FLOAT(IV-1)*VINCR+V01
c      VL=V(NV0)
c      VR=V(1)
c      NBNM=0
c      DO 50 IB=1,ICO
c      IF (IB.GE.11) GO TO 15
c      IF (IM.EQ.0.AND.WR(IB).LT.0.0001) GO TO 50
C  1ST DERIVATIVE OF R-FACTOR W.R.T. V0
c15    CALL DER(RST(ISPL,IB,1),NV0,NSPL,ICO,1,1,R1,VINCR)                 2001875
C  LOCATE MINIMUM (VM) IN R-FACTOR (LINEAR INTERPOL. BETWEEN NEAREST
C  POINTS)
C  (IV,IV+1) WILL LABEL CURRENT INTERVAL IN SEARCH, IVM THE LAST VALUE OF
C  IV WHERE A MINIMUM WAS FOUND, IVMM THE POINT IV OR IV+1 WITH
C  THE SMALLEST R-FACTOR VALUE, IVM1 THE LAST VALUE OF IVMM.
C  FIRST, MINIMA CHARACTERIZED BY ZERO DERIVATIVES ARE LOCATED.
C  IF THERE ARE POINTS WITH A SMALLER VALUE (AT THE EDGES OF THE INTERVAL
C  INDICATING THAT A DEEPER MINIMUM LIES OUTSIDE THE INTERVAL), THE
C  CURRENT CURVE IS DESCRIBED AS HAVING NO MINIMUM
c      IV=1
c      IVM=0
c      IVM1=0
c      NOMIN=1
c20    IF (R1(IV).LT.0..AND.R1(IV+1).GE.0.) GO TO 30
c      IV=IV+1
c      IF (IV.EQ.NV0) GO TO 34
c      GO TO 20
c30    NOMIN=0
c      IVMM=IV
c      IF (RST(ISPL,IB,IV+1).LT.RST(ISPL,IB,IV)) IVMM=IV+1                090680
C  CHECK IF THIS MINIMUM IS DEEPER THAN ANY FOUND BEFORE, AND GO BACK
C  TO LOOK FOR ANY FURTHER MINIMUM
c      IF (IVM.NE.0) GO TO 31
c      IVM=IV
c      IVM1=IVMM
c      GO TO 33
c31    IF (RST(ISPL,IB,IVMM).GE.RST(ISPL,IB,IVM1)) GO TO 33               090680
c      IVM=IV
c      IVM1=IVMM
c33    IV=IV+1
c      IF (IV.EQ.NV0) GO TO 34
c      GO TO 20
C  CHECK WHETHER FOUND MINIMUM IS GLOBAL IN GIVEN V0 RANGE, INCLUDING
C  THE EDGES WHERE MINIMA WITHOUT ZERO DERIVATIVE CAN OCCUR
c34    IF (NOMIN.EQ.1) GO TO 40
c      DO 35 I=1,NV0
c35    IF (RST(ISPL,IB,I).LT.RST(ISPL,IB,IVM1)) GO TO 40                  090680
c      VM=V(IVM)+(V(IVM+1)-V(IVM))*ABS(R1(IVM))/(ABS(R1(IVM))+R1(IVM+1))
cC  RECORD SPREAD IN POSITIONS OF MINIMA
c      IF (VM.LT.VL) VL=VM
c      IF (VM.GT.VR) VR=VM
c      GO TO 50
cC  NO MINIMUM FOUND
c40    NBNM=NBNM+1
c50    CONTINUE
c      DV=VR-VL
c      IF (IM.EQ.0) GO TO 70
c      DO 58 IV=1,NV0
c      WRITE(6,56)V(IV),(RST(ISPL,IB,IV),IB=1,ICO)                        090680
cC     WRITE(8,56)V(IV),(RST(ISPL,IB,IV),IB=1,ICO)
c56    FORMAT(6H V0 = ,1F7.2,7H RAV = ,15F7.4,5(/,18F7.4))
c58    CONTINUE
c      WRITE(6,60)NBNM,DV
cC     WRITE(8,60)NBNM,DV
c      WRITE(9,60)NBNM,DV
c      WRITE(10,60)NBNM,DV
c60    FORMAT(19H FOR THIS GEOMETRY,,1I4,
c     152H  BEAMS HAVE NO MINIMUM AVER. R-FACTOR, OTHERS HAVE ,1F7.2,
c     220H EV SPREAD IN MINIMA)
c      RETURN
c70    WRITE(6,80)NBNM,DV
cC     WRITE(8,80)NBNM,DV
c      WRITE(9,80)NBNM,DV
c      WRITE(10,80)NBNM,DV
c80    FORMAT(19H FOR THIS GEOMETRY,,1I4,
c     152H R-FACTORS HAVE NO MINIMUM AVER. VALUE, OTHERS HAVE ,1F7.2,
c     220H EV SPREAD IN MINIMA)
c      RETURN
c      END
C-----------------------------------------------------------------------
C  SUBROUTINE RDPL READS LEED INTENSITIES PUNCHED OUT BY LEED            2875279
C  SUBROUTINE RINT. DATA FROM DIFFERENT RUNS OF THE LEED PROGRAMS OVER
C  SUCCESSIVE ENERGY RANGES  MAY BE CONCATENATED (LEAVING SEPARATING EOF
C  MARKS) WITHOUT NEED FOR DELETION OF FIRST PART OF DATA (TITLE,BEAMS,
C  ETC), BUT USER SUPPLIED INPUT SHOULD NOT BE REPEATED. IT IS ASSUMED
C  THAT IF A RUN OF THE LEED PROGRAMS HAS NOT TERMINATED A GIVEN
C  ENERGY (I.E. DONE SOME BUT NOT ALL OF THE GEOMETRIES AT THAT
C  ENERGY), A NEXT RUN WILL HAVE STARTED AT THE UNCOMPLETED ENERGY
C  (REDOING IT ENTIRELY).
C  INDIVIDUAL GEOMETRIES MAY BE SKIPPED.
C   E= READ ENERGY GRID.
C   YDATA(K,J,I)= READ INTENSITIES  K INDEXES GEOMETRIES, J INDEXES
C    BEAMS, I INDEXES ENERGIES.
C   NS= INPUT NO. OF GEOMETRIES USED IN THE LEED COMPUTATION.
C   NB= INPUT NO. OF BEAMS FOR WHICH INTENSITIES WERE PUNCHED OUT.
C   NE= OUTPUT NO. OF ENERGIES ON GRID.
C   SPAC= NUMBERS SPECIFYING THE VARIOUS GEOMETRIES (E.G. INTERLAYER
C    SPACINGS).
C   PQ= READ BEAMS.
C   KAV= INPUT BEAM GROUPINGS (BEAMS WITH THE SAME VALUE OF KAV WILL BE
C    AVERAGED TOGETHER).
C   SYM= READ BEAM SYMMETRY CODES (USED TO DETERMINE THE AVERAGING
C    WEIGHTS).
C   EMIN,EMAX - INPUT AT ENERGIES BELOW EMIN OR ABOVE EMAX IS IGNORED.
C   LIMFIL= NO. OF FILES (SEPARATED BY EOF MARKS) TO BE READ
C   NSSK= LIST OF GEOMETRIES TO BE SKIPPED
C   NSS= NO. OF GEOMETRIES LEFT AFTER SKIPPING.
      SUBROUTINE RDPL(E,YDATA,NSS,NB,NE,SP,SPAC,PQ,KAV,SYM,EMIN,EMAX,
     1LIMFIL,NSSK,NS,DCO1,DCO2)
      DIMENSION E(1200),YDATA(NSS,NB,200),SPAC(NSS),LAB(26),PQ(2,NB)
      DIMENSION KAV(NB),SP(NS), YD(26),NSSK(NS)
      INTEGER SYM(NB)
C  FOR CDC ONLY  **************************
C     LEVEL 2, YDATA
C  READ BEAM NAMES (PQ), IDENTIFIERS (LAB=NPU OF LEED PROGRAM;
C  NOT USED HERE) AND SYMMETRY PROPERTIES (SYM), AS SUPPLIED BY
C  THE LEED PROGRAM
      DO 10 J=1,NB
10    READ(5,20) LAB(J),(PQ(I,J),I=1,2),SYM(J)
20    FORMAT(I3,2F10.5,I3)
c      READ(5,1000) DCO1,DCO2                                             mkmkmk
1000  FORMAT(2F8.4)
      WRITE(6,27)
C     WRITE(8,27)
27    FORMAT(22H0THEOR. BEAM GROUPINGS)                                  0404875
      DO 28 J=1,NB
      WRITE(6,29)(PQ(I,J),I=1,2),KAV(J)
28                                        CONTINUE
29    FORMAT(1H ,2F6.3,I5)
C  READ ENERGIES (E), GEOMETRICAL CHARACTERIZATION (SPAC) AND
C  INTENSITIES (YDATA), AS SUPPLIED BY THE LEED PROGRAM
      IFILE=1
      I=1
30    JS=0
      DO 50 J=1,NS
      READ (5,40,END=55) E(I),SP(J),(YD(K),K=1,NB)
40    FORMAT(F8.2,F7.4,4E14.5,5(/5E14.5))
C      E(I)=E(I)+E(I)/150
C  CHECK FOR END OF INPUT
C RD  IF (NEOF .EQ. 5) GO TO 55
      DO 32 IS=1,NS
32    IF (NSSK(IS).EQ.J) GO TO 50
      JS=JS+1
      SPAC(JS)=SP(J)
      DO 35 K=1,NB
35    YDATA(JS,K,I)=YD(K)
50    CONTINUE
      IF (E(I).GT.EMAX) GO TO 60
      IF (E(I).GE.EMIN) I=I+1
      GO TO 30
55    IFILE=IFILE+1
      IF (IFILE.GT.LIMFIL) GO TO 60
C  START READING NEXT FILE, SKIPPING FIRST PART OF DATA
      NSK=NB+2
      DO 56 KK=1,NSK
56    READ(5,57)IDUM
57    FORMAT(A4)
      GO TO 30
60    NE=I-1
      WRITE(6,65)
C     WRITE(8,65)
C     WRITE(9,65)
C     WRITE(10,65)
65    FORMAT(43H0SURFACE STRUCTURE NO. AND CHARACTERIZATION)
      DO 70 J=1,NSS
      WRITE(6,75)J,SPAC(J)
70                                        CONTINUE
C     WRITE(9,75)J,SPAC(J)
C 70  WRITE(10,75)J,SPAC(J)
75    FORMAT(18X,I3,F15.4)
      RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE READE INPUTS EXPERIMENTAL IV-CURVES
      SUBROUTINE READE(AE,EE,NBED,NEE,NBEA,BENAME,IPR)
      DIMENSION AE(NBED,1200),EE(NBED,1200),NEE(NBED),NBEA(NBED),
     1FMT(19),BENAME(5,NBED)
C  FOR CDC ONLY  ***************************
C     LEVEL 2, AE,EE
30    FORMAT(5(25I3,/))
C  READ IN EXP. BEAM AVERAGING INFORMATION. IF NBEA(I)=NBEA(J), EXP.
C  BEAMS I AND J WILL BE AVERAGED TOGETHER. THE RELATION NBEA(J).GT.
C  NBEA(I) IF J.GT.I MUST HOLD. IF NBEA(I)=0, EXP. BEAM I WILL BE SKIPPED
C  LATER ON
      READ(8,30)(NBEA(I),I=1,NBED)
      WRITE(6,40)NBED
C     WRITE(8,40)NBED
40    FORMAT(1H0,I4,25H EXP. BEAMS TO BE READ IN)                         0404875
      WRITE(6,50)(NBEA(I),I=1,NBED)
C     WRITE(8,50)(NBEA(I),I=1,NBED)
50    FORMAT(31H0AVERAGING SCHEME OF EXP. BEAMS,5(25I3,/))
C  READ INPUT FORMAT OF EXP. INTENSITIES
      READ(8,60)(FMT(I),I=1,19)
60    FORMAT(19A4)
      DO 90 IB=1,NBED
C  READ AND PRINT NAME OF THIS BEAM
      READ(8,10)(BENAME(I,IB),I=1,5)
10    FORMAT(19A4)
      WRITE(6,70)IB,(BENAME(I,IB),I=1,5)
C     WRITE(8,70)IB,(BENAME(I,IB),I=1,5)
70    FORMAT(11H0EXP. BEAM ,1I3,2H (,5A4,1H))
C  READ IN NO. OF DATA POINTS TO BE INPUT FOR THIS BEAM AND CONSTANT
C  CORRECTION FACTOR FOR INTENSITIES. THIS FACTOR IS MEANT TO ALLOW
C  NORMALIZATION TO INTENSITIES OF THE ORDER OF 1 (NOT NECESSARY, BUT
C  SAFE), AND TO MATCH UP CURVES TO BE AVERAGED TOGETHER WHEN THEIR
C  ENERGY RANGES DIFFER (TO AVOID DISCONTINUITIES AT ENERGIES WHERE
C  THE NUMBER OF CURVES AVERAGED TOGETHER CHANGES)
      READ(8,35)NEE(IB),FAC
35    FORMAT(1I4,1E13.4)
      N=NEE(IB)
C  READ (AND MAYBE PRINT) EXP. INTENSITIES
      READ(8,FMT)(EE(IB,IE),AE(IB,IE),IE=1,N)
      IF (IPR.LT.1) GO TO 82
      WRITE(6,80)(EE(IB,IE),AE(IB,IE),IE=1,N)
80    FORMAT(31H0 EXP. ENERGIES AND INTENSITIES,
     1/,83(5(1F7.2,1E13.4,3X),/))
82    DO 86 IE=1,N
86    AE(IB,IE)=AE(IB,IE)*FAC
90    CONTINUE
      RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE RINTAV AVERAGES LEED INTENSITIES OVER DOMAINS, USING       2875279
C  WEIGHTS DETERMINED BY THE SYMMETRY PROPERTIES (SYM) USED IN THE
C  LEED PROGRAM (THIS IS NECESSARY FOR THE CASE WHEN SYMMETRY HAS
C  HAS BEEN EXPLOITED, OTHERWISE ALL WEIGHTS ARE 1.)
      SUBROUTINE RINTAV(AT,NS,NB,NE,PQ,KAV,SYM,LAVM,ES,NPRIN)            2875279
      DIMENSION AT(NS,NB,NE),KAV(NB),PQ(2,NB),ES(NE)
      INTEGER SYM(NB)                                                    2875279
C  FOR CDC ONLY *****************************
C     LEVEL 2, AT
      LAV=1
      LAVM=0
10    CONTINUE
      DO 20 IB=1,NB
C  FIND THE FIRST BEAM OF A GROUP TO BE AVERAGED TOGETHER
      IF (LAV.NE.KAV(IB)) GO TO 20
      LAVM=LAVM+1
C  USE NAME OF FIRST BEAM ENCOUNTERED IN THIS GROUP (FOR PRINTING)
      DO 12 K=1,2
12    PQ(K,LAV)=PQ(K,IB)
      WT=0.0
      DO 15 JB=IB,NB
C  FIND THE OTHER BEAMS OF THE GROUP TO BE AVERAGED WITH THE FIRST
C  BEAM ENCOUNTERED ABOVE
      IF (LAV.NE.KAV(JB)) GO TO 15
      LAB=SYM(JB)
C  DETERMINE WEIGHTING FACTOR
      IF (LAB-10) 45,100,60
45    IF (LAB-2) 70,50,50
50    IF (LAB-7) 80,90,90
60    IF (LAB-12) 110,65,65
65    IF (LAB-15) 120,130,130
70    WGHT=1.0
      GO TO 200
80    WGHT=2.0
      GO TO 200
90    WGHT=4.0
      GO TO 200
100   WGHT=8.0
      GO TO 200
110   WGHT=3.0
      GO TO 200
120   WGHT=6.0
      GO TO 200
130   WGHT=12.0
200   CONTINUE
      IF (WT.LT.0.001) GO TO 14
      DO 13 IS=1,NS
      DO 13 IE=1,NE
13    AT(IS,LAV,IE)=AT(IS,LAV,IE)+WGHT*AT(IS,JB,IE)
      GO TO 145
14    DO 150 IS=1,NS
      DO 150 IE=1,NE
150   AT(IS,LAV,IE)=WGHT*AT(IS,JB,IE)
145   CONTINUE
      WT=WT+WGHT
15    CONTINUE
      DO 17 IS=1,NS
      DO 17 IE=1,NE
17    AT(IS,LAV,IE)=AT(IS,LAV,IE)/WT
      GO TO 25
20    CONTINUE
25    LAV=LAV+1
      IF (LAV.LE.NB) GO TO 10
      IF (NPRIN.LT.2) RETURN
C  PRINT OUT AVERAGED INTENSITIES
C     DO 40 IS=1,NS
C     WRITE(6,30)IS,(PQ(1,IB),PQ(2,IB),IB=1,LAVM)
C 30  FORMAT(1H ,//,19H0SURFACE STRUCTURE ,I3,//,45H BEAMS AND BEAM INTE
C    1NSITIES AFTER AVERAGING  ,5(/,22X,8(1X,2A6),/,28X,8(1X,2A6)))
C     DO 32 IE=1,NE
C 32  WRITE(6,35)ES(IE),(AT(IS,IB,IE),IB=1,LAVM)
C 35  FORMAT(10H ENERGY = ,1F7.2,5H EV  ,8E13.5,5(/,28X,8E13.5,/,22X,
C    18E13.5))
C 40  CONTINUE
      RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE RMSRD FINDS THE STANDARD ERROR IN THE MEAN OF BEAM R-FACTOR 090680
C  VALUES (IF IM=0) OR OF BEAM R-FACTOR DERIVATIVES (IF IM=1). DERIVATI-
C  VES ARE TAKEN WITH RESPECT TO THE GEOMETRICAL VARIATION GIVEN BY THE
C  LAST NSPL GEOMETRIES
c      SUBROUTINE RMSRD(RST1,EETS,NSPL,ICO,NV0,IVGS,GSV0,VALUES,NSS,IS,
c     1RD,IM)
c      DIMENSION RST1(NSPL,ICO,NV0),EETS(NSPL,ICO,NV0),VALUES(NSS),
c     1RD(NSPL,ICO),R(40),R1(40)
cC  FOR CDC ONLY  ********************
cC     LEVEL 2, RST1,EETS
c      IF (IM.EQ.1) GO TO 20
c      DO 10 IB=1,ICO
c      DO 10 ISPL=1,NSPL
c10    RD(ISPL,IB)=RST1(ISPL,IB,IVGS)
c      GO TO 60
cC  H IS INCREMENT NEEDED TO CALC. R-FACTOR DERIVATIVES IN DER
c20    H=ABS(VALUES(IS)-VALUES(IS-1))
c      DO 50 IB=1,ICO
c      DO 30 ISPL=1,NSPL
c30    R(ISPL)=RST1(ISPL,IB,IVGS)
c      CALL DER(R,NSPL,1,1,1,1,R1,H)
c      DO 40 ISPL=1,NSPL
c40    RD(ISPL,IB)=R1(ISPL)
c50    CONTINUE
c60    DO 130 ISPL=1,NSPL
c      S=0.
c      W=0.
c      DO 70 IB=1,ICO
c      S=S+EETS(ISPL,IB,IVGS)*RD(ISPL,IB)
c70    W=W+EETS(ISPL,IB,IVGS)
c      RDA=S/W
c      WRITE(6,80)RDA
c80    FORMAT(73H0FOR CASE OF NEXT LINE, AVERAGE R-FACTOR OR AVERAGE R-FA
c     1CTOR DERIVATIVE =,1F9.4)
c      S=0.
c      DO 90 IB=1,ICO
c90    S=S+EETS(ISPL,IB,IVGS)*(RDA-RD(ISPL,IB))**2
c      RMS=SQRT(S/((ICO-1)*W))
c      ISC=IS-NSPL+ISPL
c      IF (IM.EQ.1) GO TO 110
c      WRITE(6,100)ISC,GSV0,RMS
cC     WRITE(8,100)ISC,GSV0,RMS
c100   FORMAT(14H FOR GEOM. NO.,1I4,11H ,WITH V0 =,1F7.2,52H EV, ST. ERRO
c     1R IN THE MEAN OF BEAM R-FACTOR VALUES -,1F9.4)
c      GO TO 130
c110   WRITE(6,120)ISC,GSV0,RMS
cC     WRITE(8,120)ISC,GSV0,RMS
c120   FORMAT(14H FOR GEOM. NO.,1I4,11H ,WITH V0 =,1F7.2,53H EV, ST. ERRO
c     1R IN THE MEAN OF BEAM R-FACTOR DERIV.S -,1F9.4)
c130   CONTINUE
c      RETURN
c      END
C-----------------------------------------------------------------------
C  SUBROUTINE RSTOR PUTS R-FACTORS IN STORAGE
      SUBROUTINE RSTOR(RAV,NBED,RST,NSPL,ICO,NV0,ISPL,IV,IBM,IM)         090680
      DIMENSION RAV(NBED),RST(NSPL,ICO,NV0),IBM(NBED)                    090680
C  FOR CDC ONLY  ********************
C     LEVEL 2, RAV,RST
      DO 10 IB=1,ICO
      IBE=IB
      IF (IM.EQ.1) IBE=IBM(IB)
10    RST(ISPL,IB,IV)=RAV(IBE)                                           090680
      RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE SMOOTH SMOOTHES A SET OF DATA (GIVEN ON A NON-UNIFORM
C  GRID, BUT CHOOSING A SIMPLIFIED FORMULA WHEN EQUAL INTERVALS ARE
C  FOUND) BY WEIGHTED THREE-POINT AVERAGING
      SUBROUTINE SMOOTH(AE,EE,NBED,NBE,NEE,IPR)
      DIMENSION AE(NBED,1200),EE(NBED,1200),NEE(NBE)
C  FOR CDC ONLY  ***************************
C     LEVEL 2, AE,EE
      DO 40 IB=1,NBE
      N=NEE(IB)-1
C  IF TOO FEW POINTS, NO SMOOTHING POSSIBLE
      IF (N.LT.3) GO TO 40
      AM=AE(IB,1)                                                       020780
      DO 30 IE=2,N
      AF=AE(IB,IE)
      E21=EE(IB,IE)-EE(IB,IE-1)
      E32=EE(IB,IE+1)-EE(IB,IE)
      IF (ABS(E21-E32).LT.0.0001) GO TO 10
      AE(IB,IE)=0.5*(AF+(E32*AM+E21*AE(IB,IE+1))/(E21+E32))             020780
      GO TO 20
10    AE(IB,IE)=0.25*(2.*AF+AM+AE(IB,IE+1))                             020780
20    CONTINUE
      AM=AF                                                             020780
30    CONTINUE
40    CONTINUE
      IF (IPR.LT.2) GO TO 70
      DO 50 IB=1,NBE
      N=NEE(IB)
      IF (N.EQ.0) GO TO 50
      WRITE(6,60)IB,(EE(IB,IE),AE(IB,IE),IE=1,N)
60    FORMAT(48H0EXP. ENERG. AND INTENS. AFTER SMOOTHING IN BEAM,1I3,
     1/,50(5(1F7.2,1E13.4,3X),/))
50    CONTINUE
70    RETURN
      END
C------------------------------------------------------------------------
C  SUBROUTINE STFPTS FINDS, GIVEN THE INTERPOLATION INTERVAL, THE
C  FOUR NEAREST GRID POINTS AND THE CORRESPONDING ORDINATE VALUES
      SUBROUTINE STFPTS(IL, IH, WORX, WORY, LENGTH)
      DIMENSION WORX(LENGTH), WORY(LENGTH), TEMP(2, 4)
      COMMON / DATBLK / X0, X1, X2, X3, Y0, Y1, Y2, Y3
      I = IL - 1
      IF(IL .LE. 1) I = I + 1
      IF(IH .GE. LENGTH) I = I - 1
      DO 10 K = 1, 4
      N = K + I - 1
      TEMP(1,K) = WORX(N)
10    TEMP(2, K) = WORY(N)
      X0 = TEMP(1, 1)
      X1 = TEMP(1, 2)
      X2 = TEMP(1, 3)
      X3 = TEMP(1, 4)
      Y0 = TEMP(2, 1)
      Y1 = TEMP(2, 2)
      Y2 = TEMP(2, 3)
      Y3 = TEMP(2, 4)
      RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE STRIP2 COPIES ENERGIES AND INTENSITIES FOR A GIVEN
C  GEOMETRY IS
      SUBROUTINE STRIP2(YS,NS,NBD,NE,IS,Y,NB,ES,ET)
      DIMENSION YS(NS,NBD,200),Y(NBD,1200),NE(NBD),ES(1200)
      DIMENSION ET(NBD,1200)
C     LEVEL 2, YS,Y,ET
      DO 10 IB=1,NB
      N=NE(IB)
      DO 10 IE=1,N
      ET(IB,IE)=ES(IE)
10    Y(IB,IE)=YS(IS,IB,IE)
      RETURN
      END
C------------------------------------------------------------------------
C  SUBROUTINE SUM INTEGRATES BY THE SIMPLE TRAPEZOID RULE (AFTER
C  ZANAZZI-JONA)
      SUBROUTINE INTSUM(Y,NS,NBD,IS,IB,H,I1,I2,S)
      DIMENSION Y(NS,NBD,1200)
      A=0.
      S=0.
      DO 10 J=I1,I2
10    A=A+Y(IS,IB,J)
      S=A-0.5*(Y(IS,IB,I1)+Y(IS,IB,I2))
      S=S*H
      RETURN
      END
C------------------------------------------------------------------------
C  SUBROUTINE VARSUM INTEGRATES OVER VARIOUS COMBINATIONS OF THE INPUT
C  FUNCTIONS (TABULATED) A1,A2,B1,B2, DEPENDING ON THE VALUE OF NF.
C  NV IS A RELATIVE SHIFT OF THE X-AXIS BETWEEN FUNCTIONS. IE1,IE2 ARE
C  THE INTEGRATION LIMITS.
C  WITH THE INTEGRAND OF THE ZANAZZI-JONA R-FACTOR A 10 TIMES
C  DENSER GRID IS USED AND FIRST INTERPOLATED TO
C
C   NF     INTEGRAND
C
C    1       A1
C    2       A1**2
C    3       ABS(A1)
C    4       ABS(A1-C*A2)
C    5       (A1-C*A2)**2
C    6       ABS(B1-C*B2)*ABS(A1-C*A2)/(ABS(A1)+EPS)
C
      SUBROUTINE VARSUM(A1,A2,B1,B2,NS1,NS2,NBD1,NBD2,IS1,IS2,IB1,IB2,
     1IE1,IE2,NV,EINCR,EPS,C,NF,S,Y)
      DIMENSION A1(NS1,NBD1,1200),A2(NS2,NBD2,1200),
     1B2(NS2,NBD2,1200),Y(1200),Y1(1200),Y2(1200),Y3(1200),Y4(1200)
      DIMENSION B1(NS1,NBD1,1200), YY(4   )
C     LEVEL 2, A1,A2,B1,B2
      N=0
C  FOR ZANAZZI-JONA R-FACTOR INTERPOLATION ONTO 10-FOLD DENSER GRID
C  IS MADE
      IF (NF.EQ.6) GO TO 100
      DO 80 IE=IE1,IE2
      N=N+1
      IES=IE+NV
      GO TO (10,20,30,40,50,60),NF
10    Y(N)=A1(IS1,IB1,IE)
      GO TO 70
20    Y(N)=A1(IS1,IB1,IE)**2
      GO TO 70
30    Y(N)=ABS(A1(IS1,IB1,IE))
      GO TO 70
40    Y(N)=ABS(A1(IS1,IB1,IE)-C*A2(IS2,IB2,IES))
      GO TO 70
50    Y(N)=(A1(IS1,IB1,IE)-C*A2(IS2,IB2,IES))**2
      GO TO 70
60    Y(N)=ABS(B1(IS1,IB1,IE)-C*B2(IS2,IB2,IES))*
     1     ABS(A1(IS1,IB1,IE)-C*A2(IS2,IB2,IES))/
     2        (ABS(A1(IS1,IB1,IE))+EPS)
70    CONTINUE
80    CONTINUE
      CALL INTSUM(Y,1,1,1,1,EINCR,1,N,S)
      RETURN
100   DO 110 IE=IE1,IE2
      N=N+1
      IES=IE+NV
      Y(N)=FLOAT(N-1)*EINCR
      Y1(N)=A1(IS1,IB1,IE)
      Y2(N)=A2(IS2,IB2,IES)
      Y3(N)=B1(IS1,IB1,IE)
110   Y4(N)=B2(IS2,IB2,IES)
      DE=0.1*EINCR
      NN=10*(N-1)+1
      DO 120 IE=1,NN
      X=FLOAT(IE-1)*DE
      ITIL=0
      ITIH=0
      AA1=YVAL(X,Y1(1),Y,N,ITIL,ITIH)
      ITIL=0
      ITIH=0
      AA2=YVAL(X,Y2(1),Y,N,ITIL,ITIH)
      ITIL=0
      ITIH=0
      AB1=YVAL(X,Y3(1),Y,N,ITIL,ITIH)
      ITIL=0
      ITIH=0
      AB2=YVAL(X,Y4(1),Y,N,ITIL,ITIH)
120   YY(IE)=ABS(AB1-C*AB2)*ABS(AA1-C*AA2)/(ABS(AA1)+EPS)
      CALL INTSUM(YY,1,1,1,1,DE,1,NN,S)
      RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE XNTERP PERFORMS 3RD-ORDER POLYNOMIAL INTERPOLATION
      FUNCTION XNTERP(X)
      COMMON / DATBLK / X0, X1, X2, X3, Y0, Y1, Y2, Y3
      TERM = Y0
      FACT1 = X - X0
      FACT2 = (Y1 - Y0) / (X1 - X0)
      TERM = TERM + FACT1 * FACT2
      FACT1 = FACT1 * (X - X1)
      FACT2 = ((Y2 - Y1)/(X2 - X1) - FACT2) / (X2 - X0)
      TERM = TERM + FACT1 * FACT2
      FACT1 = FACT1 * (X - X2)
      TEMP = ((Y3 - Y2)/(X3 - X2) - (Y2 - Y1)/(X2 - X1))/(X3 - X1)
      FACT2 = (TEMP - FACT2) / (X3 - X0)
      TERM = TERM + FACT1 * FACT2
      XNTERP = TERM
      RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE XNTRP2 PERFORMS 2ND OR 1ST ORDER POLYNOMIAL INTERPOLATION
      SUBROUTINE XNTRP2(X,Y,XS,YS,N)
      DIMENSION XS(N),YS(N)
      IF (N.GT.2) GO TO 10
      Y=(YS(2)-YS(1))*(X-XS(1))/(XS(2)-XS(1))+YS(1)
      RETURN
10    A=(YS(1)-YS(2))/(XS(1)-XS(2))/(XS(2)-XS(3))-
     1 (YS(1)-YS(3))/(XS(1)-XS(3))/(XS(2)-XS(3))
      B=(YS(1)-YS(2))/(XS(1)-XS(2))-A*(XS(1)+XS(2))
      C=YS(1)-(A*XS(1)+B)*XS(1)
      Y=C+X*(B+A*X)
      RETURN
      END
C-----------------------------------------------------------------------
C  SUBROUTINE YPEND CALCULATES THE PENDRY Y FUNCTION
C  Y = (A/AP) / ((A/AP)**2 + VI), WHERE AP/A IS THE LOGARITHMIC
C  DERIVATIVE OF THE (TABULATED) FUNCTION A
      SUBROUTINE YPEND(A,AP,NS,NBD,IS,NB,NE,E,Y,VI,IPR)
      DIMENSION A(NS,NBD,1200),AP(NS,NBD,1200),NE(NBD),E(NBD,1200)
      DIMENSION Y(NBD,1200)
C     LEVEL 2, A,AP,E,Y
      DO 25 IB=1,NB
      N=NE(IB)
      IF (N.EQ.0) GO TO 25
      DO 20 IE=1,N
      AF=A(IS,IB,IE)
      IF (ABS(AF).LT.1.E-7) GO TO 10
      AF=AP(IS,IB,IE)/AF
      Y(IB,IE)=AF/(1.+VI*VI*AF*AF)
      GO TO 20
10    APF=AP(IS,IB,IE)
      IF (APF.GT.1.E-7) GO TO 15
      Y(IB,IE)=0.
      GO TO 20
15    AF=AF/APF
      Y(IB,IE)=AF/(AF*AF+VI*VI)
20    CONTINUE
25    CONTINUE
      IF (IPR.LT.2) GO TO 50
      DO 30 IB=1,NB
      N=NE(IB)
      IF (N.EQ.0) GO TO 30
      WRITE(6,40)IB,(E(IB,IE),Y(IB,IE),IE=1,N)
40    FORMAT(26H PENDRY Y FUNCTION IN BEAM,1I3,/,100(5(1F7.2,1E13.4,3X),
     1/))
30    CONTINUE
50    RETURN
      END
C-----------------------------------------------------------------------
C  FUNCTION YVAL INTERPOLATES
      FUNCTION YVAL(X, WORY, WORX, LENGTH,ITIL,ITIH)
      DIMENSION WORY(LENGTH), WORX(LENGTH)
      COMMON /DATBLK/ X0,X1,X2,X3,Y0,Y1,Y2,Y3
C  IF FEWER THAN FOUR GRID POINTS AVAILABLE, USE 2ND OR 1ST ORDER
C  POLYNOMIAL INTERPOLATION
      IF (LENGTH.LT.4) GO TO 10
C  FIND REQUIRED INTERPOLATION INTERVAL
      CALL BINSRX(IL, IH, X, WORX, LENGTH)
C  SKIP NEXT STEP IF SAME INTERVAL IS FOUND AS LAST TIME
      IF(IL .EQ. ITIL .AND. IH .EQ. ITIH) GO TO 5
C  FIND FOUR NEAREST GRID POINTS AND CORRESPONDING INTENSITIES
C  FOR 3RD-ORDER POLYNOMIAL INTERPOLATION
      CALL STFPTS(IL, IH, WORX, WORY, LENGTH)
C  DO ACTUAL 3RD-ORDER POLYNOMIAL INTERPOLATION
 5    Y = XNTERP(X)
      ITIH = IH
      ITIL = IL
      YVAL = Y
      GO TO 20
10    CALL XNTRP2(X,Y,WORX,WORY,LENGTH)
      YVAL=Y
20    RETURN
      END
